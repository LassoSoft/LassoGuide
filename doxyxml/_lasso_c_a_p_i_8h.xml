<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_lasso_c_a_p_i_8h" kind="file">
    <compoundname>LassoCAPI.h</compoundname>
    <includes local="no">unicode/uchar.h</includes>
    <incdepgraph>
      <node id="1">
        <label>unicode/uchar.h</label>
      </node>
      <node id="0">
        <label>/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h</label>
        <link refid="LassoCAPI.h"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structlasso__value__t" prot="public">lasso_value_t</innerclass>
    <innerclass refid="structlasso__value__w__t" prot="public">lasso_value_w_t</innerclass>
    <innerclass refid="structlasso__request__t__" prot="public">lasso_request_t_</innerclass>
    <innerclass refid="structlasso__type__t__" prot="public">lasso_type_t_</innerclass>
    <innerclass refid="structlasso__dsconnection__t__" prot="public">lasso_dsconnection_t_</innerclass>
    <innernamespace refid="namespace_l_p_types">LPTypes</innernamespace>
      <sectiondef kind="user-defined">
      <header>Tag Registration Flags</header>
      <description><para>The following flags may be OR&apos;d together in various combinations and passed to lasso_registerTagModule or lasso_registerTagModuleW as the <emphasis>flags</emphasis> parameter to control how the tag behaves when it is called. </para></description>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1afd88c2880e0cec87a2b4b62cb3be5a0d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeInitializer</definition>
        <argsstring></argsstring>
        <name>flag_typeInitializer</name>
        <initializer>=		0x00000001</initializer>
        <briefdescription>
<para>The tag is to be treated as an initializer for a custom type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="615" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a4a194df614267a9b2e3f976f38a7980a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeSubstitutionTag</definition>
        <argsstring></argsstring>
        <name>flag_typeSubstitutionTag</name>
        <initializer>=	0x00000002</initializer>
        <briefdescription>
<para>The tag is to be treated as a &quot;regular&quot; tag. </para>        </briefdescription>
        <detaileddescription>
<para>This is the default behavior so this flag is not required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="619" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a0f5984f9d6e966834a66629a7a18c4da" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeAsync</definition>
        <argsstring></argsstring>
        <name>flag_typeAsync</name>
        <initializer>=				0x00000004</initializer>
        <briefdescription>
<para>The tag is to be run in its own thread. </para>        </briefdescription>
        <detaileddescription>
<para>It will return no value to the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="623" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a8dffbc16425d74d451655e516611d1a7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeContainerTag</definition>
        <argsstring></argsstring>
        <name>flag_typeContainerTag</name>
        <initializer>=		0x00000008</initializer>
        <briefdescription>
<para>The tag is a container tag. </para>        </briefdescription>
        <detaileddescription>
<para>The tag must be called using the proper <preformatted>tag; ... /tag;</preformatted> syntax or an error is generated. The result of executing any body statements can be retrieved using the lasso_childrenRun function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="628" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1af72a5f6dcfae67bd446c3bf59f247221" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeInterstitial</definition>
        <argsstring></argsstring>
        <name>flag_typeInterstitial</name>
        <initializer>=		0x00000010</initializer>
        <briefdescription>
<para>Used internally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="629" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1ac66a11c6d130a0d1001f6b0ae8b3428d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeSkipSecurityCheck</definition>
        <argsstring></argsstring>
        <name>flag_typeSkipSecurityCheck</name>
        <initializer>=	0x00000040</initializer>
        <briefdescription>
<para>Bypass any security checks for the tag. </para>        </briefdescription>
        <detaileddescription>
<para>Useful to avoid any performance hits associated with security checks. Should only be used when a tag performs only trival or completely secure operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="634" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1ad8f96b9bad9109c5131d66d4107c6e07" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_INTERNALONLY</definition>
        <argsstring></argsstring>
        <name>flag_INTERNALONLY</name>
        <initializer>=			0x00000080</initializer>
        <briefdescription>
<para>Used internally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="635" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a9323b05e82307d88bc3f1b37647cf386" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeLoopingTag</definition>
        <argsstring></argsstring>
        <name>flag_typeLoopingTag</name>
        <initializer>=			0x00000100</initializer>
        <briefdescription>
<para>The tag is a looping container tag. </para>        </briefdescription>
        <detaileddescription>
<para>For any tag registered with this flag, Lasso will automatically keep track of the loop_count and increment it each time the tag calls lasso_childrenRun. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="640" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a5736c275c7fc84997995d3b9ecedd326" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_typeEval</definition>
        <argsstring></argsstring>
        <name>flag_typeEval</name>
        <initializer>=				0x00000200</initializer>
        <briefdescription>
<para>Used internally. Not useful for LCAPI tag types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="641" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_noGlobalImport</definition>
        <argsstring></argsstring>
        <name>flag_noGlobalImport</name>
        <initializer>=			0x00000400</initializer>
        <briefdescription>
<para>The tag should not be automatically imported into the global namespace. </para>        </briefdescription>
        <detaileddescription>
<para>All LCAPI tags, starting with LP8, which are registered with a namespace should specify this flag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="645" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1ad820bf9958847850c14c1b428a9e69ce" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_INTERNALONLY2</definition>
        <argsstring></argsstring>
        <name>flag_INTERNALONLY2</name>
        <initializer>=			0x00000800</initializer>
        <briefdescription>
<para>Used internally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="646" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1afe844e24fdb0f6c87af8f52b36b92065" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_deprecated</definition>
        <argsstring></argsstring>
        <name>flag_deprecated</name>
        <initializer>=				0x00001000</initializer>
        <briefdescription>
<para>Use of the tag is deprecated. </para>        </briefdescription>
        <detaileddescription>
<para>Depending on the administrator&apos;s configuration, calling the tag will automatically output a warning to the logging system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="651" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a3316993049398d4a1462e88ebb89e5cc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_noDefaultEncoding</definition>
        <argsstring></argsstring>
        <name>flag_noDefaultEncoding</name>
        <initializer>=		0x00002000</initializer>
        <briefdescription>
<para>Never apply default HTML encoding to the tag&apos;s return value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="652" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a65267c43db87044a25588360e6cf878d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_INTERNALONLY3</definition>
        <argsstring></argsstring>
        <name>flag_INTERNALONLY3</name>
        <initializer>=			0x00004000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="653" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a4884d39f1323537e3e694ba046962bc2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_prototype</definition>
        <argsstring></argsstring>
        <name>flag_prototype</name>
        <initializer>=				0x00008000</initializer>
        <briefdescription>
<para>Applies only to types registered with lasso_registerTypeModule. </para>        </briefdescription>
        <detaileddescription>
<para>An instance of the type will be created immediately (onCreate will not be called). Any further calls to this type will result in a fast copy of the prototype being created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="658" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a7e7007414442b98489c01d748b194f51" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_atomic</definition>
        <argsstring></argsstring>
        <name>flag_atomic</name>
        <initializer>=					0x00010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="659" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a36c078701a600e370452572f19864564" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_private</definition>
        <argsstring></argsstring>
        <name>flag_private</name>
        <initializer>=				0x00020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="660" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a0b28defad0481c9f2950728b5064a7f8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_nonBlockingCAPI</definition>
        <argsstring></argsstring>
        <name>flag_nonBlockingCAPI</name>
        <initializer>=		0x00040000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="662" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a2940640b8e40f245ef2df39ce7101c00" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_User1</definition>
        <argsstring></argsstring>
        <name>flag_User1</name>
        <initializer>=					0x01000000</initializer>
        <briefdescription>
<para>User defined flag. </para>        </briefdescription>
        <detaileddescription>
<para>May be used with lasso_tagSetFlag, lasso_tagHasFlag, lasso_tagClearFlag OR lasso_typeSetFlag, lasso_typeHasFlag, lasso_typeClearFlag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="672" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a8f98e576943f195677ae1d7ed4d61790" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_User2</definition>
        <argsstring></argsstring>
        <name>flag_User2</name>
        <initializer>=					0x02000000</initializer>
        <briefdescription>
<para>User defined flag. </para>        </briefdescription>
        <detaileddescription>
<para>May be used with lasso_tagSetFlag, lasso_tagHasFlag, lasso_tagClearFlag OR lasso_typeSetFlag, lasso_typeHasFlag, lasso_typeClearFlag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="677" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a04c5eaff81adf0ccd1a79b59fbfa8742" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_User3</definition>
        <argsstring></argsstring>
        <name>flag_User3</name>
        <initializer>=					0x03000000</initializer>
        <briefdescription>
<para>User defined flag. </para>        </briefdescription>
        <detaileddescription>
<para>May be used with lasso_tagSetFlag, lasso_tagHasFlag, lasso_tagClearFlag OR lasso_typeSetFlag, lasso_typeHasFlag, lasso_typeClearFlag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="682" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a3e302d63221b7cb15ceba9b01ca7c55d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int flag_User4</definition>
        <argsstring></argsstring>
        <name>flag_User4</name>
        <initializer>=					0x04000000</initializer>
        <briefdescription>
<para>User defined flag. </para>        </briefdescription>
        <detaileddescription>
<para>May be used with lasso_tagSetFlag, lasso_tagHasFlag, lasso_tagClearFlag OR lasso_typeSetFlag, lasso_typeHasFlag, lasso_typeClearFlag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="687" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a135e250abe3d765277878039f786e8c1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REG_FLAGS_TAG_DEFAULT</definition>
        <argsstring></argsstring>
        <name>REG_FLAGS_TAG_DEFAULT</name>
        <initializer>= (<ref refid="_lasso_c_a_p_i_8h_1a4a194df614267a9b2e3f976f38a7980a" kindref="member">flag_typeSubstitutionTag</ref> | <ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member">flag_noGlobalImport</ref>)</initializer>
        <briefdescription>
<para>Recommended default registration flags. </para>        </briefdescription>
        <detaileddescription>
<para>For a normal tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="693" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a895178fac31b60b6483e938bc67bd18b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REG_FLAGS_CONTAINER_DEFAULT</definition>
        <argsstring></argsstring>
        <name>REG_FLAGS_CONTAINER_DEFAULT</name>
        <initializer>= (<ref refid="_lasso_c_a_p_i_8h_1a8dffbc16425d74d451655e516611d1a7" kindref="member">flag_typeContainerTag</ref> | <ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member">flag_noGlobalImport</ref>)</initializer>
        <briefdescription>
<para>Recommended default registration flags. </para>        </briefdescription>
        <detaileddescription>
<para>For a container tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="699" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a1ea037f0de6b4d69755f659b0cae2e61" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REG_FLAGS_LOOPING_DEFAULT</definition>
        <argsstring></argsstring>
        <name>REG_FLAGS_LOOPING_DEFAULT</name>
        <initializer>= (<ref refid="_lasso_c_a_p_i_8h_1a9323b05e82307d88bc3f1b37647cf386" kindref="member">flag_typeLoopingTag</ref> | <ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member">flag_noGlobalImport</ref>)</initializer>
        <briefdescription>
<para>Recommended default registration flags. </para>        </briefdescription>
        <detaileddescription>
<para>For a looping container tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="705" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1ab0957efe2df707af5e7d98ded8e0d2c0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REG_FLAGS_TYPE_DEFAULT</definition>
        <argsstring></argsstring>
        <name>REG_FLAGS_TYPE_DEFAULT</name>
        <initializer>= (<ref refid="_lasso_c_a_p_i_8h_1afd88c2880e0cec87a2b4b62cb3be5a0d" kindref="member">flag_typeInitializer</ref> | <ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member">flag_noGlobalImport</ref>)</initializer>
        <briefdescription>
<para>Recommended default registration flags. </para>        </briefdescription>
        <detaileddescription>
<para>For a type initializer tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="711" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7b3d865b925e1dba86adf0a784ff8c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerTypeModule</definition>
        <argsstring>(const char *namespaceName, const char *tagName, lasso_tag_func func, int flags, const char *description, const char *superType)</argsstring>
        <name>lasso_registerTypeModule</name>
        <param>
          <type>const char *</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tagName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>superType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespaceName</parametername>
</parameternamelist>
<parameterdescription>
<para>The namespace in which the type will be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name which the type can be called by. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The user supplied callback for the type initializer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Any special flags for the type. If flag_typeInitializer is ommited, it will be automatically added. Any conflicting flags such as flag_typeContainerTag or flag_typeLoopingTag will be ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>A description for the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>superType</parametername>
</parameternamelist>
<parameterdescription>
<para>Optionally, the name of the new type&apos;s super type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="736"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a9c46ed56cc5f9d6b1f0752938f0416da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerTypeModuleW</definition>
        <argsstring>(const UChar *namespaceName, const UChar *tagName, lasso_tag_func func, int flags, const UChar *description, const UChar *superType)</argsstring>
        <name>lasso_registerTypeModuleW</name>
        <param>
          <type>const UChar *</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>tagName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>superType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="737"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Datasource Module Registration</header>
      <description><para>These functions are called to register a new datasource module. </para></description>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afdae48eed519b5d89c5e0715f3dfd232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerDSModule</definition>
        <argsstring>(const char *moduleName, lasso_ds_func func, int flags)</argsstring>
        <name>lasso_registerDSModule</name>
        <param>
          <type>const char *</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member">lasso_ds_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>moduleName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the datasource module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The User supplied callback for the datasource module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Any special flags for the datasource module. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="751"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a91179de2848e0da6ea6d86a5e23cdff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerDSModuleW</definition>
        <argsstring>(const UChar *moduleName, lasso_ds_func func, int flags)</argsstring>
        <name>lasso_registerDSModuleW</name>
        <param>
          <type>const UChar *</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member">lasso_ds_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="752"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ae77383781bded0bd9a900d8051894401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerDSModule2</definition>
        <argsstring>(const char *moduleName, lasso_ds_func func, int flags, void *userData, void(*userDataDtor)(void *))</argsstring>
        <name>lasso_registerDSModule2</name>
        <param>
          <type>const char *</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member">lasso_ds_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>userDataDtor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="753"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aaf7e6bea41e393347d0bfb47308d35dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerDSModule2W</definition>
        <argsstring>(const UChar *moduleName, lasso_ds_func func, int flags, void *userData, void(*userDataDtor)(void *))</argsstring>
        <name>lasso_registerDSModule2W</name>
        <param>
          <type>const UChar *</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member">lasso_ds_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>userDataDtor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="754"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Allocating Built-in Type Instances</header>
      <description><para>The following functions allocate instances of specific built-in types. The lasso_request_t token may be null. If it is null, the allocated types are created as &quot;detached&quot; and must be manually freed using lasso_typeFree. </para></description>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aa4344b64054f539a5fec2bca6797941c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocNull</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outNull)</argsstring>
        <name>lasso_typeAllocNull</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outNull</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type null.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outNull</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="868"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a8cc7acf6b8f25d12846af115e91d16b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocString</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outString, const char *value, int length)</argsstring>
        <name>lasso_typeAllocString</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outString</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outString</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 data from which to copy for the new string instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the UTF-8 data in characters. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="878"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a3f09b6ec7ed6d7f901dfe76d0bba1a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocStringConv</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outString, const char *value, int length, const char *conv)</argsstring>
        <name>lasso_typeAllocStringConv</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outString</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>conv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type string using the specified conversion method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outString</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The source data from which to copy for the new string instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the source data in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conv</parametername>
</parameternamelist>
<parameterdescription>
<para>The encoding of the source data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="889"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1abd3468ac7077fc65f51eaf408d745169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocStringW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outString, const UChar *value, int length)</argsstring>
        <name>lasso_typeAllocStringW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outString</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outString</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-16 data from which to copy for the new string instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the UTF-16 data in characters. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="899"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a0300ffbc816428406dc9aa5ddf3d0838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAppendStringW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, const UChar *val, int len)</argsstring>
        <name>lasso_typeAppendStringW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="900"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a8d57924dcc160bb08045d7c0ae80fcba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocInteger</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outInteger, int64_t value)</argsstring>
        <name>lasso_typeAllocInteger</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outInteger</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type integer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outInteger</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value which the new type instance will hold. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="909"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4d3870b34c40b9f9455c1663ec643e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocDecimal</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outDecimal, double value)</argsstring>
        <name>lasso_typeAllocDecimal</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outDecimal</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type decimal.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outDecimal</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value which the new type instance will hold. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="918"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4d0247f10281f5d36fe3b1fb91d2fb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocDecimal2</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outDecimal, double value, int precision)</argsstring>
        <name>lasso_typeAllocDecimal2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outDecimal</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type decimal.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outDecimal</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value which the new type instance will hold. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>The decimal precision that the new type instance will output to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="928"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a402f0149c72bf960bfd03589f69488db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocPair</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outPair, lasso_type_t first, lasso_type_t second)</argsstring>
        <name>lasso_typeAllocPair</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outPair</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type pair.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outPair</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to use for the first member of the pair. A reference to the instance will be made. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to use for the second member of the pair. A reference to the instance will be made. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="938"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a9f89451fdd9853d205c313aac8489814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocReference</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outRef, lasso_type_t referenced)</argsstring>
        <name>lasso_typeAllocReference</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outRef</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>referenced</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new hard reference to a type instance. The new instance will point to the original. This is a no-op under Lasso 9.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outRef</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenced</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to be referenced. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="948"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a04d0d96413e3a32f5096d904fecc9c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocTag</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outTag, lasso_tag_func nativeTagFunction)</argsstring>
        <name>lasso_typeAllocTag</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outTag</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>nativeTagFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type tag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outTag</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nativeTagFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>The LCAPI lasso_tag_func which will be called when the tag is used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="957"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aef44427e96746ceba8aaa1f7ac630539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocTagFromSource</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outTag, const char *source, int length)</argsstring>
        <name>lasso_typeAllocTagFromSource</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outTag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type tag from the given source text.</para><para>If the source text is UTF-8, it must contain a BOM or it will be treated as the default platform encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outTag</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The source text which will be compiled to become the body of the tag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the source text in characters. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="969"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4170d1609d09609301ae202b5f8fd3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocArray</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outArray, int count, lasso_type_t *elements)</argsstring>
        <name>lasso_typeAllocArray</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of new array elements to insert. The number of items in the <emphasis>elements</emphasis> parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an array of lasso_type_t which will become the elements of the array. Each item will be referenced. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="979"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1abad01e5ec216291d309fe5dc9ddb38b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocBoolean</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outBool, bool inValue)</argsstring>
        <name>lasso_typeAllocBoolean</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outBool</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new instance of type boolean.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outBool</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The boolean value which the new type instance will hold. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="988"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getting or Setting Values of Built-in Type Instances</header>
      <description><para>The following functions get and set the data on a previously created built-in type instance. When getting a value, the source type instance will not be altered. When setting a value, the provided type instance is converted, if required. The lasso_request_t token may be null. </para></description>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a1ed3b543b3ab88e1cb2400f764f1de03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetString</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, auto_lasso_value_t *val)</argsstring>
        <name>lasso_typeGetString</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves character data from a type instance.</para><para>If the type is a string instance, the data will be converted to UTF-8. If the type is a bytes instance, the data will be provided unaltered. For any other type, the result will be the same as converting the type into a string and returning the data as UTF-8.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retrieve the character data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> struct in which to store the result. The data will be stored in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1012"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a94ec13a88c79b8214f941d03758d6a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetStringConv</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, auto_lasso_value_t *val, const char *conv)</argsstring>
        <name>lasso_typeGetStringConv</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>conv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves character data from a type instance using the specified conversion method. If the special conversion method of &quot;BINARY&quot; is used, and the source type is a string, the resulting data will be UTF-16 data. If the special conversion method of &quot;BINARY&quot; is used, and the source type is bytes, the resulting data will be provided unaltered. For any other type, if the special conversion method of &quot;BINARY&quot; is used, the result will be the same as converting the instance to a string and retrieving the UTF-16 data.</para><para>The remaining possible values for the conversion method are any of the character encoding methods supported by ICU or any of the converters stored in the &apos;<bold>external_converters</bold>&apos; global variable.</para><para>In all cases, the <emphasis>nameSize</emphasis> portion of the resulting value struct will be the number of bytes in the result data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retrieve the character data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> struct in which to store the result. The data will be stored in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conv</parametername>
</parameternamelist>
<parameterdescription>
<para>The encoding method to use when transforming the Unicode string data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1031"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a41f21228be7e4b4aa2fcb200ae1bacdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetStringW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, auto_lasso_value_w_t *val)</argsstring>
        <name>lasso_typeGetStringW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" kindref="member">auto_lasso_value_w_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves Unicode character data from a type instance.</para><para>For any type other than string, the result will be the same as converting the type into a string and returning the data as UTF-16.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retrieve the character data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> struct in which to store the result. The data will be stored in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1042"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a0ddc97b5133dc869d690992093c461be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetInteger</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, int64_t *out)</argsstring>
        <name>lasso_typeGetInteger</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the integer value from a type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retieve the integer value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the resulting 64-bit integer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1051"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4a18b9f2314ebbdadc523db2c260762e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetDecimal</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, double *out)</argsstring>
        <name>lasso_typeGetDecimal</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the decimal value from a type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retieve the decimal value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the resulting double. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1060"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a6ffe81fa1dd2f76ed40e8873220dd590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetBoolean</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, bool *out)</argsstring>
        <name>lasso_typeGetBoolean</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the boolean value from a type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retieve the boolean value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the resulting boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1069"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aff379f604683f4f46471d247d96c0cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeSetString</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, const char *val, int len)</argsstring>
        <name>lasso_typeSetString</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the type instance into a string and sets the value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The source data in UTF-8 encoding. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the source UTF-8 data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1079"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a3b22cc6173dcc3442611799c33c0d102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeSetStringW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t type, const UChar *val, int len)</argsstring>
        <name>lasso_typeSetStringW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the type instance into a string and sets the value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The source data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the source data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1089"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a32d0a722c031158171c4c5d16df4dc3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_arrayGetSize</definition>
        <argsstring>(lasso_request_t token, lasso_type_t array, int *len)</argsstring>
        <name>lasso_arrayGetSize</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>array</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the size of the provided array instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer in which to store the resulting size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1098"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a107654dc36d267e3cbbb4dd87b00c81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_arrayGetElement</definition>
        <argsstring>(lasso_request_t token, lasso_type_t array, int index, lasso_type_t *out)</argsstring>
        <name>lasso_arrayGetElement</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the specified element of the provided array instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index at which to retreive. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer in which to store the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1108"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af56583b5dfcb6f48218d5af62c689b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_arraySetElement</definition>
        <argsstring>(lasso_request_t token, lasso_type_t array, int index, lasso_type_t elem)</argsstring>
        <name>lasso_arraySetElement</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the specified element of the provided array instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index at which to set. If the index is greater than the array&apos;s current size or is less than zero, the new item is added to the end of the array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance which will be placed at the specified index. The instance will be referenced. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1118"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4d91c7457777802d7b93297880e6d351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_pairGetFirst</definition>
        <argsstring>(lasso_request_t token, lasso_type_t pr, lasso_type_t *out)</argsstring>
        <name>lasso_pairGetFirst</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>pr</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the first member from the provided pair.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer in which to store the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1127"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1abdbe7518b4730feac6c146a95eeb3cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_pairGetSecond</definition>
        <argsstring>(lasso_request_t token, lasso_type_t pr, lasso_type_t *out)</argsstring>
        <name>lasso_pairGetSecond</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>pr</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the second member from the provided pair.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer in which to store the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1136"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a30d3e29f08154eece7e0a0ff0376e051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_pairSetFirst</definition>
        <argsstring>(lasso_request_t token, lasso_type_t pr, lasso_type_t frst)</argsstring>
        <name>lasso_pairSetFirst</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>pr</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>frst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the first member of the provided pair.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frst</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to use as the first member. The instance will be referenced. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1145"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ac957e8c797df44b67f01f90edf7c8d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_pairSetSecond</definition>
        <argsstring>(lasso_request_t token, lasso_type_t pr, lasso_type_t scnd)</argsstring>
        <name>lasso_pairSetSecond</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>pr</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>scnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the second member of the provided pair.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scnd</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to use as the second member. The instance will be referenced. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Datasource Module Functions</header>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7469a1b461a8ba4f421cdbbc8b3e77dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addDataSourceResult</definition>
        <argsstring>(lasso_request_t token, const char *data)</argsstring>
        <name>lasso_addDataSourceResult</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Adds a datasource result value. </para>        </briefdescription>
        <detaileddescription>
<para>Datasource actions which require returning multiple values can use this to add those values. For example, this call can be used to add the name of a datasource that the module services or the names of the tables in a particular datasource.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to add. Data must be in ISO8859-1 encoding. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1673"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7e6c07237bd7030b745298ec415b1e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addDataSourceResultUTF8</definition>
        <argsstring>(lasso_request_t token, const char *data)</argsstring>
        <name>lasso_addDataSourceResultUTF8</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Adds a datasource result value. </para>        </briefdescription>
        <detaileddescription>
<para>Datasource actions which require returning multiple values can use this to add those values. For example, this call can be used to add the name of a datasource that the module services or the names of the tables in a particular datasource.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to add. Data must be in UTF-8 encoding. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1684"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7abe379ac89ca050208fd239126aba03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataSourceName</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *t, bool *useHostDefault, auto_lasso_value_t *usernamepassword)</argsstring>
        <name>lasso_getDataSourceName</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>useHostDefault</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>usernamepassword</declname>
        </param>
        <briefdescription>
<para>Gets the currently specified database name and associated data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting database name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useHostDefault</parametername>
</parameternamelist>
<parameterdescription>
<para>The setting which specifies whether the hosts username/password combo should be used in the absence of a database specific combo. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usernamepassword</parametername>
</parameternamelist>
<parameterdescription>
<para>The username/password combo for the database. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1694"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a80bf83b848b9c49712fa8eab1ec3a897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTableName</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *t)</argsstring>
        <name>lasso_getTableName</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Gets the currently specified table name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting table name which will be placed in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1702"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a0bd9fb902e7877416f8135b47f5296b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTableEncoding</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *t)</argsstring>
        <name>lasso_getTableEncoding</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Gets the currently specified table encoding. This is the encoding as set in SiteAdmin for the current table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting table encoding which will be placed in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1710"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a3efdf3a218d22cfd62baa14031194610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getSchemaName</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *schema)</argsstring>
        <name>lasso_getSchemaName</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Gets the currently specified schema name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting schema name which will be placed in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1718"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ada7d2eb87606bfa88d857e2e6145c29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataHost</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *host, auto_lasso_value_t *usernamepassword)</argsstring>
        <name>lasso_getDataHost</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>usernamepassword</declname>
        </param>
        <briefdescription>
<para>Returns the host that maintains the current database. </para>        </briefdescription>
        <detaileddescription>
<para>The host name will be placed in the <emphasis>name</emphasis> portion of the struct while the port will be placed in the <emphasis>data</emphasis> portion.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting host data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usernamepassword</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting username/password combo. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1729"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aab9c483175cac28c3c9b3a2837934667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataHostID</definition>
        <argsstring>(lasso_request_t token, int *outId)</argsstring>
        <name>lasso_getDataHostID</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outId</declname>
        </param>
        <briefdescription>
<para>Returns the id of the host that maintains the current database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outId</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting host id. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1737"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a8051b31babf3ba46a4fb65e078c2dbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataHost2</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *host, auto_lasso_value_t *defaultSchema, auto_lasso_value_t *usernamepassword)</argsstring>
        <name>lasso_getDataHost2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>defaultSchema</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>usernamepassword</declname>
        </param>
        <briefdescription>
<para>Returns the host that maintains the current database. </para>        </briefdescription>
        <detaileddescription>
<para>The host name will be placed in the <emphasis>name</emphasis> portion of the struct while the port will be placed in the <emphasis>data</emphasis> portion.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting host data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting default schema name which will be placed in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usernamepassword</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting username/password combo. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1749"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a99709dd934a29da45102ab058a93cd8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataHostExtra</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *data)</argsstring>
        <name>lasso_getDataHostExtra</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Returns the &quot;extra&quot; information associated with the current host. </para>        </briefdescription>
        <detaileddescription>
<para>The data, if any, will be placed in the <emphasis>name</emphasis> portion of the struct.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting extra host data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1759"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7fe0bac5b95e5a69be15147faec1392f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataHostIsDynamic</definition>
        <argsstring>(lasso_request_t token, bool *wasDyn)</argsstring>
        <name>lasso_getDataHostIsDynamic</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>wasDyn</declname>
        </param>
        <briefdescription>
<para>Indicates if the host is dynamic. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wasDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to true if the host was dynamic and false if it was not. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1767"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a3ecd97206a2c67b4ebf7990dc75de52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getSkipRows</definition>
        <argsstring>(lasso_request_t token, int *recs)</argsstring>
        <name>lasso_getSkipRows</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>recs</declname>
        </param>
        <briefdescription>
<para>The number of rows that should be skipped in the found set. </para>        </briefdescription>
        <detaileddescription>
<para>-skiprecords</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recs</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting -skiprecords value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1778"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a661b69571052a298d02c5d05bb22e8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getMaxRows</definition>
        <argsstring>(lasso_request_t token, int *recs)</argsstring>
        <name>lasso_getMaxRows</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>recs</declname>
        </param>
        <briefdescription>
<para>The maximum number of rows in the found set to return. </para>        </briefdescription>
        <detaileddescription>
<para>-maxrecords</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recs</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting -maxrecords value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1788"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a52790510836877190e01fa8f8cf43d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setRowID</definition>
        <argsstring>(lasso_request_t token, int id)</argsstring>
        <name>lasso_setRowID</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets the currently specified record id (FileMaker specific). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric row id. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1796"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a6c3bdde7662ee44e0c4c62e7b4cbded1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getRowID</definition>
        <argsstring>(lasso_request_t token, int *id)</argsstring>
        <name>lasso_getRowID</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the currently specified record id (FileMaker specific). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric row id. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1804"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aeaa993e385bfb4ec54fbf696c8aef5f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getPrimaryKeyColumn</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *v)</argsstring>
        <name>lasso_getPrimaryKeyColumn</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Gets the name and the value of the currently specified primary key column. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting key name and value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1812"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ac76ff794ffd7a12de1ab89ac2fca2bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getPrimaryKeyColumn2</definition>
        <argsstring>(lasso_request_t token, int index, auto_lasso_value_t *v, LP_TypeDesc *desc)</argsstring>
        <name>lasso_getPrimaryKeyColumn2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>LP_TypeDesc *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Gets the name and the value of the primary key column specified by index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting key name and value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a LP_TypeDesc in which to place the original type of the input data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1822"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ad890d7406eb49899fea1708c98f2c1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getPrimaryKeyColumn3</definition>
        <argsstring>(lasso_request_t token, int index, auto_lasso_value_t *keyName, lasso_type_t *type)</argsstring>
        <name>lasso_getPrimaryKeyColumn3</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>keyName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Gets the name and the value of the primary key column specified by index, preserving the original type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the key field will be stored in the <emphasis>name</emphasis> member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The value portion of the key field in its original type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1832"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a638ff1921a2cd9755cce94bb03b69f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getPrimaryKeyColumnCount</definition>
        <argsstring>(lasso_request_t token, int *count)</argsstring>
        <name>lasso_getPrimaryKeyColumnCount</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Gets the number of key columns. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int in which the number of key columns will be placed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1840"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a68b8f69e6c147ac05156d42f7c01391b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getInputColumnCount</definition>
        <argsstring>(lasso_request_t token, int *count)</argsstring>
        <name>lasso_getInputColumnCount</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Gets the number of input columns for this database action. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting number of input columns. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1848"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a9b42baf0b3424367abdea249a7cf3828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getSortColumnCount</definition>
        <argsstring>(lasso_request_t token, int *count)</argsstring>
        <name>lasso_getSortColumnCount</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Gets the number of sort columns for this database action. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting number of sort columns. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1856"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aa4fe5c97855c87839f51d2cf15f18622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getInputColumn</definition>
        <argsstring>(lasso_request_t token, int num, auto_lasso_value_t *v)</argsstring>
        <name>lasso_getInputColumn</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Gets an individual input column by index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero based index of the column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1865"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ad44dbd64bcbfeb3b66592530f76ab0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getInputColumn2</definition>
        <argsstring>(lasso_request_t token, int num, auto_lasso_value_t *v, LP_TypeDesc *desc)</argsstring>
        <name>lasso_getInputColumn2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>LP_TypeDesc *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Gets an individual input column by index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero based index of the column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a LP_TypeDesc in which to place the original type of the input data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1875"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af06526d556b2d80786c9824af3a51632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getInputColumn3</definition>
        <argsstring>(lasso_request_t token, int num, auto_lasso_value_t *colName, lasso_type_t *type)</argsstring>
        <name>lasso_getInputColumn3</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>colName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Gets an individual input column by index, preserving the original type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero based index of the column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the column will be stored in the <emphasis>name</emphasis> member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The value portion of the input column in its original type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1885"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ae17f89eaae19e65ce3ace1083f2b7efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getSortColumn</definition>
        <argsstring>(lasso_request_t token, int num, auto_lasso_value_t *v)</argsstring>
        <name>lasso_getSortColumn</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Gets an individual sort column by index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero based index of the sort column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1894"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a2e5883c1efe43cbba869f0998b4cf672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_findInputColumn</definition>
        <argsstring>(lasso_request_t token, const char *name, auto_lasso_value_t *value)</argsstring>
        <name>lasso_findInputColumn</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Gets an individual input column by name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the input column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1903"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aee234bbd9d0591472548dfa318a44d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_findInputColumnW</definition>
        <argsstring>(lasso_request_t token, const UChar *name, auto_lasso_value_t *value)</argsstring>
        <name>lasso_findInputColumnW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Gets an individual input column by name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the input column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1912"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aebef9186d861711f035b41b7596d7c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getLogicalOp</definition>
        <argsstring>(lasso_request_t token, LP_TypeDesc *op)</argsstring>
        <name>lasso_getLogicalOp</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>LP_TypeDesc *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Gets the logical operator for this database action. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting operator code. Operator codes are declared in <ref refid="_lasso_defines_8h" kindref="compound">LassoDefines.h</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1920"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a46d62a1e24a153f5631df951ae4b4e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getReturnColumnCount</definition>
        <argsstring>(lasso_request_t token, int *count)</argsstring>
        <name>lasso_getReturnColumnCount</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Gets the number of return columns for this action. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting number of return columns. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1928"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a939d6f03305c64524f5fd2cb31745d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getReturnColumn</definition>
        <argsstring>(lasso_request_t token, int num, auto_lasso_value_t *v)</argsstring>
        <name>lasso_getReturnColumn</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Gets an individual return column by index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the return column to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1937"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a994e7ddc85ffce10fe4f4961d9fb71ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addColumnInfo</definition>
        <argsstring>(lasso_request_t token, const char *name, int nullOK, LP_TypeDesc type, LP_TypeDesc protection)</argsstring>
        <name>lasso_addColumnInfo</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nullOK</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>type</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>protection</declname>
        </param>
        <briefdescription>
<para>Adds information about a particular column. </para>        </briefdescription>
        <detaileddescription>
<para>Column information should be added in the order in which the columns occur inthe database. Column information should be added no matter what the action is. For the show action, only column information is added.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The column name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullOK</parametername>
</parameternamelist>
<parameterdescription>
<para>IS a null value for this column ok? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type for the column as represented by a type code. osConfig.h. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protection</parametername>
</parameternamelist>
<parameterdescription>
<para>The code for the column&apos;s protection. osConfig.h. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1951"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a2161e438ccba3bba2dcdeb9c866b1d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addColumnInfo2</definition>
        <argsstring>(lasso_request_t token, const char *name, int nullOK, LP_TypeDesc type, LP_TypeDesc protection, const char **valueList, int countValueList)</argsstring>
        <name>lasso_addColumnInfo2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nullOK</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>type</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>protection</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>valueList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>countValueList</declname>
        </param>
        <briefdescription>
<para>Adds information, including valuelists, about a particular column. </para>        </briefdescription>
        <detaileddescription>
<para>Column information should be added in the order in which the columns occur inthe database. Column information should be added no matter what the action is. For the show action, only column information is added.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The column name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullOK</parametername>
</parameternamelist>
<parameterdescription>
<para>IS a null value for this column ok? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type for the column as represented by a type code. osConfig.h. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protection</parametername>
</parameternamelist>
<parameterdescription>
<para>The code for the column&apos;s protection. osConfig.h. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueList</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of strings for the column&apos;s valuelist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>countValueList</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values in the value list. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1967"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4e68a0ac40e0c012311cc311425b170c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addResultRow</definition>
        <argsstring>(lasso_request_t token, const char **columns, unsigned long *dataSizes, int numColumns)</argsstring>
        <name>lasso_addResultRow</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>dataSizes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numColumns</declname>
        </param>
        <briefdescription>
<para>Add the column data for the next result row. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>columns</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of column values. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSizes</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of column value lengths. Every column in <emphasis>columns</emphasis> should have an associated length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numColumns</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the <emphasis>columns</emphasis> and <emphasis>dataSizes</emphasis> arrays. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1977"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a05f9b774a6e8c2decba4b0b8c0c2f261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addResultRow2</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *cols, int num)</argsstring>
        <name>lasso_addResultRow2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Add the column data for the next result row. Column data is represented as Lasso types. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of column values. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the <emphasis>cols</emphasis> array. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1986"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a0a4145d3d6066876a2fc0826d2eec489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_addResultSet</definition>
        <argsstring>(lasso_request_t token)</argsstring>
        <name>lasso_addResultSet</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Adds a new result set to the datasource results. </para>        </briefdescription>
        <detaileddescription>
<para>At the onset of each LCAPI datasource call, there is an initial blank result set created. This is the first result set. After a datasource has added all the data for the first result set, if there is a second result set, the datasource should call lasso_addResultSet to start a new set and then proceed to populate the column information and data for that set as normal. This should be repeated for each result set. lasso_addResultSet should be called for each result set after the first. Calling lasso_addResultSet before populating the first result set will result in the first set being empty.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2000"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ad8cddb8a1d6491f3494de591359bed37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setNumRowsFound</definition>
        <argsstring>(lasso_request_t token, int num)</argsstring>
        <name>lasso_setNumRowsFound</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Sets the number of rows found in the query. </para>        </briefdescription>
        <detaileddescription>
<para>This will not always be the same value as the number of rows added with the lasso_addResultRow call as the skip recs and max recs parameters effect that number.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of found rows. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2010"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afba37ea8f4d925a9af787a333e308945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDataSourceModuleName</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *val)</argsstring>
        <name>lasso_getDataSourceModuleName</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Returns the name the current datasource module was registered with. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting datasource module name which will be palced in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2018"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af2e5c4dd582ccdb2a88bce81a477e11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setDSPreparedPtr</definition>
        <argsstring>(lasso_request_t token, void *ptr)</argsstring>
        <name>lasso_setDSPreparedPtr</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Allows a datasource to set a prepared statement pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer value to set for later retrieval. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2026"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a9b01bca301dc4a6ae6a52dfe9f2e2adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDSPreparedPtr</definition>
        <argsstring>(lasso_request_t token, void **ptr)</argsstring>
        <name>lasso_getDSPreparedPtr</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Allows a datasource to get a previously set prepared statement pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer, if it has been presiously set, will be placed in this parameter. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2034"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a35f82b2bfc1522a2ac14784c3e0d78f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDSConnection</definition>
        <argsstring>(lasso_request_t token, lasso_dsconnection_t *conn)</argsstring>
        <name>lasso_getDSConnection</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a21d10c8c1936424c035994a8e878ac0d" kindref="member">lasso_dsconnection_t</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Called to access the current datasource connection. </para>        </briefdescription>
        <detaileddescription>
<para>Datasource connections are set using the lasso_setDSConnection function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer in which to store the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2045"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a0385f2a8695e079e0c1a643beaf24157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setDSConnection</definition>
        <argsstring>(lasso_request_t token, lasso_dsconnection_t conn)</argsstring>
        <name>lasso_setDSConnection</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a21d10c8c1936424c035994a8e878ac0d" kindref="member">lasso_dsconnection_t</ref></type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Called to set the current connection for the datasource. </para>        </briefdescription>
        <detaileddescription>
<para>May recurse to deliver the datasourceCloseConnection message if there is already a valid lasso_dbconnection_t.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection value to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2055"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a2ed752b3f0974cd334cc9943dcb72d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getDSUserData</definition>
        <argsstring>(lasso_request_t token, void **outPtr)</argsstring>
        <name>lasso_getDSUserData</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>outPtr</declname>
        </param>
        <briefdescription>
<para>Provides access to the &quot;user data&quot; that was set when the datasorce was registered. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer in which the user data is returned. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2063"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aa342a3807011a309524e29274e4b159b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setActionStatement</definition>
        <argsstring>(lasso_request_t token, const char *stat)</argsstring>
        <name>lasso_setActionStatement</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
<para>Called to set the statement for the current action. </para>        </briefdescription>
        <detaileddescription>
<para>Datasources must call this to support the action_statement tag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>The statement value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2074"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ad6a477b23257a7eece23a72fe82cf2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setActionStatementW</definition>
        <argsstring>(lasso_request_t token, const UChar *stat)</argsstring>
        <name>lasso_setActionStatementW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
<para>Called to set the statement for the current action. </para>        </briefdescription>
        <detaileddescription>
<para>Datasources must call this to support the action_statement tag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>The statement value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2084"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a941b582ae206642c6686b2fd3d73e685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getIsStatementOnly</definition>
        <argsstring>(lasso_request_t token, bool *out)</argsstring>
        <name>lasso_getIsStatementOnly</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Used to check for the -statementonly inline param. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer in which to store the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2092"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Logging Functions</header>
      <memberdef kind="enum" id="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" prot="public" static="no">
        <name>log_level_t</name>
        <enumvalue id="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1da1fc247cb72494d85ca8d4826117001fc" prot="public">
          <name>LOG_LEVEL_ALWAYS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Always printed to window (only). Used internally in a few places. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The various log levels. </para>        </briefdescription>
        <detaileddescription>
<para>Each log level can be configured to go to zero or more destinations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2177" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="2176" bodyend="2180"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a48d8e3a83dee15aa6f76155e445bfab7" prot="public" static="no">
        <type>enum <ref refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" kindref="member">log_level_t</ref></type>
        <definition>typedef enum log_level_t  log_level_t</definition>
        <argsstring></argsstring>
        <name>log_level_t</name>
        <briefdescription>
<para>The various log levels. </para>        </briefdescription>
        <detaileddescription>
<para>Each log level can be configured to go to zero or more destinations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2180"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a072ecfd00c323e925c8b65378f5eaafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_log</definition>
        <argsstring>(log_level_t msgLevel, const char *fmt,...)</argsstring>
        <name>lasso_log</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" kindref="member">log_level_t</ref></type>
          <declname>msgLevel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a message to stdout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2185"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a84976987b8d8dc1b91b538edcaca424a" prot="public" static="no">
        <name>MACHINE_PC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="28" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a1846588b455c93e6e7819b9c47ff79c4" prot="public" static="no">
        <name>MACHINE_UNIX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="29" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1ad015c4d84c227553544eb9121b2a9fb8" prot="public" static="no">
        <name>UCP</name>
        <param><defname>X</defname></param>
        <initializer>((const UChar*)(L##X))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="33" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1ae5dd431ec307a5804e6a2a1e46fff2f9" prot="public" static="no">
        <name>kLPOpBegin</name>
        <initializer>&quot;-opbegin&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="36" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a42927a0ee008687b714a16b57cf5e3fc" prot="public" static="no">
        <name>kLPOperatorBegin</name>
        <initializer>&quot;-operatorbegin&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="37" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1ac7a9ae8c8460728c0eb885aef2067946" prot="public" static="no">
        <name>kLPOpEnd</name>
        <initializer>&quot;-opend&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="38" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1ad781155431fa4b53fb0a6f887cb479ad" prot="public" static="no">
        <name>kLPOperatorEnd</name>
        <initializer>&quot;-operatorend&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="39" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a1c81107d6662111694f1b8fc05d15e6b" prot="public" static="no">
        <name>kLPOpBeginW</name>
        <initializer>LPW(L&quot;-opbegin&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="41" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a6ff79f51cb26a896ef52738e10b9f61e" prot="public" static="no">
        <name>kLPOperatorBeginW</name>
        <initializer>LPW(L&quot;-operatorbegin&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="42" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a8e8b63f2402e2d6239c8c52ab2eaff46" prot="public" static="no">
        <name>kLPOpEndW</name>
        <initializer>LPW(L&quot;-opend&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="43" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1af2a0b8509262614e36b5ee363f85e9dc" prot="public" static="no">
        <name>kLPOperatorEndW</name>
        <initializer>LPW(L&quot;-operatorend&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="44" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a86c5dbf5a99358e288f573d6a1e0873f" prot="public" static="no">
        <name>FD_SETSIZE</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="202" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1ad3ae2909623ca64f6bfc02b95e16750e" prot="public" static="no">
        <name>LPW</name>
        <param><defname>X</defname></param>
        <initializer>((const UChar*)X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="205" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a535b9d30b885a422370c3ffb6aa531d9" prot="public" static="no">
        <name>LCAPICALL</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="246" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a5ed80b1cd062db828a5aadd049d95be7" prot="public" static="no">
        <name>LCAPI_DEPRECATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="251" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1affe94ada55f4a0ff134903ea173f124b" prot="public" static="no">
        <name>LCAPI_VERSION</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines for testing the LCAPI versionCurrent Lasso Version. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="256" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a404173991698669c498fc3d366ef6476" prot="public" static="no">
        <name>LCAPI_VERSION_1</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lasso Version 5. First LCAPI release </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="257" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1acc5c746eea178907a94442c6d16c5f03" prot="public" static="no">
        <name>LCAPI_VERSION_2</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lasso Version 6. Second LCAPI release </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="258" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1ab07c83c20bb35b4676278c3f3da93b24" prot="public" static="no">
        <name>LCAPI_VERSION_3</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lasso Version 7. Third LCAPI release </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="259" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a87d049115b0d117f7c817da666d0c32b" prot="public" static="no">
        <name>LCAPI_VERSION_4</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lasso Version 8. Fourth LCAPI release </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="260" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a2f216da4070d57872991f1aaa51b6d6b" prot="public" static="no">
        <name>LCAPI_VERSION_9</name>
        <initializer><ref refid="_lasso_c_a_p_i_8h_1affe94ada55f4a0ff134903ea173f124b" kindref="member">LCAPI_VERSION</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lasso Version 9 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="261" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1a213f323c69368ef11dcb2d5c87ee0cbc" prot="public" static="no">
        <name>INITVAL</name>
        <param><defname>X</defname></param>
        <initializer>{ (X)-&gt;name = (X)-&gt;data = NULL; (X)-&gt;nameSize = (X)-&gt;dataSize = 0; }</initializer>
        <briefdescription>
<para>Initialize a <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> or <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> to be blank. </para>        </briefdescription>
        <detaileddescription>
<para>It is recommended that each <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> be initialized using this macro before use.</para><para>Example: <preformatted>
    <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> myVal;
    <ref refid="_lasso_c_a_p_i_8h_1a213f323c69368ef11dcb2d5c87ee0cbc" kindref="member">INITVAL(&amp;myVal)</ref>;
</preformatted> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="375" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lasso_c_a_p_i_8h_1acb72ec4256c00e00bd3879f6ce89e737" prot="public" static="no">
        <name>SET_MATCHED_NAME</name>
        <param><defname>param</defname></param>
        <initializer>{ const_cast&lt;<ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref>*&gt;(param)-&gt;dataSize = 1; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="524" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_lasso_c_a_p_i_8h_1ad9be72f666a31b4318bbc8e8a16a9472" prot="public" static="no">
        <name>SortOrder</name>
        <enumvalue id="_lasso_c_a_p_i_8h_1ad9be72f666a31b4318bbc8e8a16a9472aa31243bea87b8f2e102624f7e703a3e2" prot="public">
          <name>orderAscending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1ad9be72f666a31b4318bbc8e8a16a9472a177ca7c678d0cfd1724d11a97130e9f2" prot="public">
          <name>orderDescending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1ad9be72f666a31b4318bbc8e8a16a9472a2674c7d79ac4718a7584e91c0b7f1438" prot="public">
          <name>orderCustom</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1ad9be72f666a31b4318bbc8e8a16a9472aa31243bea87b8f2e102624f7e703a3e2" prot="public">
          <name>orderAscending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1ad9be72f666a31b4318bbc8e8a16a9472a177ca7c678d0cfd1724d11a97130e9f2" prot="public">
          <name>orderDescending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1ad9be72f666a31b4318bbc8e8a16a9472a2674c7d79ac4718a7584e91c0b7f1438" prot="public">
          <name>orderCustom</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="46" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba31364446b29b116f60372ae7629761bb" prot="public">
          <name>kLassoGreaterThan</name>
          <initializer>= &apos;&gt;   &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba4f6ace14aad1fee3c742fcef5b3a387a" prot="public">
          <name>kLassoGreaterThanEquals</name>
          <initializer>= &apos;&gt;=  &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba5c96e5eb143cf489ffa8cabef2a34df7" prot="public">
          <name>kLassoEquals</name>
          <initializer>= &apos;=   &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba83f358587fb07a398ecea1ffe7b988f3" prot="public">
          <name>kLassoLessThan</name>
          <initializer>= &apos;&lt;   &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55baa2629cd50caa4e24dd13bb14a6e81be5" prot="public">
          <name>kLassoLessThanEquals</name>
          <initializer>= &apos;&lt;=  &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55baef27fe709d04c83cd7064d1bf8c8496b" prot="public">
          <name>kLassoBeginsWith</name>
          <initializer>= &apos;bgwt&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55baa2ed9fc97a9ff6c7fd292235612114ec" prot="public">
          <name>kLassoEndsWith</name>
          <initializer>= &apos;ends&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba4e99b4e6e79fcffdd55bd6f35c0b7b80" prot="public">
          <name>kLassoContains</name>
          <initializer>= &apos;cont&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba911cdef14c49b2fcb37b442854a4e603" prot="public">
          <name>kLassoNotContains</name>
          <initializer>= &apos;!cts&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba0696fc81973263b261e7fa38356e0aeb" prot="public">
          <name>kLassoNotBeginsWith</name>
          <initializer>= &apos;!bgs&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba19027ffa437cb83c7c2b49018522765a" prot="public">
          <name>kLassoNotEndsWith</name>
          <initializer>= &apos;!end&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55baa7c683fa4c6512bce91554766a804d3e" prot="public">
          <name>kLassoAND</name>
          <initializer>= &apos;AND &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba3aacc52a5be52e7784e359e126cbc065" prot="public">
          <name>kLassoOR</name>
          <initializer>= &apos;OR  &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55baf9a29a4f29544d5d26969782e13372f9" prot="public">
          <name>kLassoNOT</name>
          <initializer>= &apos;NOT &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba70a20830effd02ae641215c1d9cd5f70" prot="public">
          <name>kLassoNo</name>
          <initializer>= &apos;no  &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba261b9e9fd84d754d9c965a9fe8eb7286" prot="public">
          <name>kLassoAny</name>
          <initializer>= &apos;any &apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55baf7e3422387f19c99ceab8550e2fea3a7" prot="public">
          <name>kLassoInList</name>
          <initializer>= &apos; nlt&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55bac8556f66fb10eb4cfcd8df42a42f1057" prot="public">
          <name>kLassoNotInList</name>
          <initializer>= &apos;!nlt&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba34c4bef47946d4e1547e7deef4000e87" prot="public">
          <name>kLassoInFullText</name>
          <initializer>= &apos; ftx&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55ba14eb7171da0d3e0a713eea9c027d9bf7" prot="public">
          <name>kLassoInRegExp</name>
          <initializer>= &apos; rxp&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a06fc87d81c62e9abb8790b6e5713c55bac2c44f652a239035fd7c336a781500f0" prot="public">
          <name>kLassoNotInRegExp</name>
          <initializer>= &apos;!rxp&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="52" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="51" bodyend="74"/>
      </memberdef>
      <memberdef kind="enum" id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24" prot="public" static="no">
        <name>lpEncodingType</name>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24ad3fe7a3f8ada565e3b9dea48a14cdd96" prot="public">
          <name>encodeURL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24a880fb952cdd4228f479e30c9144175ea" prot="public">
          <name>encodeRaw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24acae8977b0e644ec1fb4e89ea759aae10" prot="public">
          <name>encodeSmart</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24a56165d13e0fdf622b83705058bbcff3d" prot="public">
          <name>encodeBreak</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24aa183a20387438f4c710d885a1e76bcd9" prot="public">
          <name>encodeDefault</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24a893ae704e3fb972678cae7706465ac62" prot="public">
          <name>encodeStrictURL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24ad8b37e6446ac1b6fd28ab7b0ff3e0233" prot="public">
          <name>encodeXML</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24aa795027fb5bb63eba7a8bb5004fa64e6" prot="public">
          <name>encodeNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a6d3b93f83e95c406b03596d2d4393f24abbe1787eb1c2ce700323b9d51281288c" prot="public">
          <name>encodeHTML</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24ad3fe7a3f8ada565e3b9dea48a14cdd96" prot="public">
          <name>encodeURL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24a880fb952cdd4228f479e30c9144175ea" prot="public">
          <name>encodeRaw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24acae8977b0e644ec1fb4e89ea759aae10" prot="public">
          <name>encodeSmart</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24a56165d13e0fdf622b83705058bbcff3d" prot="public">
          <name>encodeBreak</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24aa183a20387438f4c710d885a1e76bcd9" prot="public">
          <name>encodeDefault</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24a893ae704e3fb972678cae7706465ac62" prot="public">
          <name>encodeStrictURL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24ad8b37e6446ac1b6fd28ab7b0ff3e0233" prot="public">
          <name>encodeXML</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24aa795027fb5bb63eba7a8bb5004fa64e6" prot="public">
          <name>encodeNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1a6d3b93f83e95c406b03596d2d4393f24abbe1787eb1c2ce700323b9d51281288c" prot="public">
          <name>encodeHTML</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="77" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="76" bodyend="87"/>
      </memberdef>
      <memberdef kind="enum" id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8" prot="public" static="no">
        <name>osError</name>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aeac18a5c05e9673c6ca7d203ad9419f4" prot="public">
          <name>osErrNoErr</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab3839ea3070c5df835555b95ffed37ad" prot="public">
          <name>osErrAssert</name>
          <initializer>= -10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a6116be61c122713b40ddf4a0cf890aae" prot="public">
          <name>osErrStreamReadError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a162da7759b7df378e067b16df8247b4d" prot="public">
          <name>osErrStreamWriteError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a158737a73a0c47868ffd61aff32ddfbe" prot="public">
          <name>osErrMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aa843bbdffa1dc61b8160e1a893fe502f" prot="public">
          <name>osErrInvalidMemoryObject</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a5597315db6c3ecdaa2bde5c8f94c1f1a" prot="public">
          <name>osErrOutOfMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8abef6e1b22aab74921442e1a5a0a46e06" prot="public">
          <name>osErrOutOfStackSpace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8afbd4c6aa6b03a92a77dc69c66a114ee0" prot="public">
          <name>osErrCouldNotLockMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a0cd17e6425b9d4e4fcbfe91979b011da" prot="public">
          <name>osErrCouldNotUnlockMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a2ba9489788e59a790d3024e760f557c8" prot="public">
          <name>osErrCouldNotDisposeMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8adf4e665c66070ea583ce04813b7ce583" prot="public">
          <name>osErrFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab587f4712acc35e34b17074916a8f4a3" prot="public">
          <name>osErrFileInvalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a2999b658ff7af97b38913fd81822bf77" prot="public">
          <name>osErrFileInvalidAccessMode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4079fd183d4007d0243651de6f7b71d9" prot="public">
          <name>osErrCouldNotCreateOrOpenFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a881207ca5ee30f90e98615f3bee25fac" prot="public">
          <name>osErrCouldNotCloseFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a13b1c8996a9c04d1e0f341752a897370" prot="public">
          <name>osErrCouldNotDeleteFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a11b38d77494d48f4eddb24164a14fabd" prot="public">
          <name>osErrFileNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a306ebe76cd6da27ed66d54bb5e365ecb" prot="public">
          <name>osErrFileAlreadyExists</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ad75192ef4bd78ed9983b7d2f0ee9ef06" prot="public">
          <name>osErrFileCorrupt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a7e09412344c544a4d257c5a7606fe8fa" prot="public">
          <name>osErrVolumeDoesNotExist</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8af23c24ca29500e813ce2c9f94bc07217" prot="public">
          <name>osErrDiskFull</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8acec112b10c6608c0462c1c9b5c48c795" prot="public">
          <name>osErrDirectoryFull</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab59d03a1f1e4760ab4fbb5b9def7d6c5" prot="public">
          <name>osErrIOError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a2a74416e7aeb2da917f44d82ac81fe27" prot="public">
          <name>osErrInvalidPathname</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aa2f3d1baa6f56b782105235caf3253ee" prot="public">
          <name>osErrInvalidFilename</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aa7f695c6e34b56b6802a6cb2f5053472" prot="public">
          <name>osErrFileLocked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a0ad6e6479ac3132b6430fa7a7af9a0b9" prot="public">
          <name>osErrFileUnlocked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a1a6156d1a51b09a7febe7715d8de7530" prot="public">
          <name>osErrFileIsOpen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a148d81a5828db027d993a5a95259c2da" prot="public">
          <name>osErrFileIsClosed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a8079e5b2eba0d88b80ff731f6701c71e" prot="public">
          <name>osErrBOF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a8ab501b333177f68c82a6aeae03136e2" prot="public">
          <name>osErrEOF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a22110d8c0ea5425a128f0542b4d8b1af" prot="public">
          <name>osErrCouldNotWriteToFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4ce5711c5144a8ee469a9e6cea1dcdf3" prot="public">
          <name>osErrCouldNotReadFromFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4484a89e6d750dd73a191cb4b9b1da45" prot="public">
          <name>osErrResNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab6be63efb715368fd6745d32628616e3" prot="public">
          <name>osErrResource</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4e6c7f03f334fda11d9dbd28f9ae5ab7" prot="public">
          <name>osErrNetwork</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a1ccf71b15cb917949cecc46a20ed328f" prot="public">
          <name>osErrInvalidUsername</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a1df43e026d91a2db73dc13a95f5f91c7" prot="public">
          <name>osErrInvalidPassword</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a25d1ae124ca6ca61ce2baba59c737f92" prot="public">
          <name>osErrInvalidDatabase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4b55e92d6148498be49fdd08577201bc" prot="public">
          <name>osErrNoPermission</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a2166f60a75a385eb6a87662048f9e0ee" prot="public">
          <name>osErrFieldRestriction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab01cf144986e8a24ae4dee57e4854bdf" prot="public">
          <name>osErrWebAddError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a903f6dd1b29ec86a672c9c926c3cda74" prot="public">
          <name>osErrWebUpdateError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a1742d37201111faa2b5ecf1add56334f" prot="public">
          <name>osErrWebDeleteError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a165a39094b5fc02f7c0ae73e97c4a619" prot="public">
          <name>osErrInvalidParameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab4a58f9038b5849814792f8658d490b1" prot="public">
          <name>osErrOverflow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8af5c916c4e4c6496495aba419562d1bbc" prot="public">
          <name>osErrNilPointer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a6d05dd2a75426e04e6e9b7df41934820" prot="public">
          <name>osErrUnknownError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a99c8c47253710ec486f16763c6339351" prot="public">
          <name>osErrLoopAborted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aff3f764dccd3320e959cab01ff0e4c00" prot="public">
          <name>osErrSyntaxError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8acd13a765be9ed6a6c11f9810b92324be" prot="public">
          <name>osErrDivideByZero</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8abd3ee4692632e70dfa33b0ac196358a5" prot="public">
          <name>osErrIllegalInstruction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8af36e663e99dd7be1565c11d67788805c" prot="public">
          <name>osErrTagNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a9ae8ae144798549cceb3975a700f4919" prot="public">
          <name>osErrVarNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8adc1e0271d310a66b9631319a517859c1" prot="public">
          <name>osErrAborted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a57755f5fd3764999bc872fc7afc52a16" prot="public">
          <name>osErrFailure</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ad887426e53b2e4cb0611d5d6c14c3ae8" prot="public">
          <name>osErrPreconditionFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ad7880fcacd0d8fa914a87b3cf800d6cf" prot="public">
          <name>osErrPostconditionFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ab45b4e2d1ddb403575c99e7bee0c4522" prot="public">
          <name>osErrCriteriaNotMet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4a0693d3eba1270415180290b74da23d" prot="public">
          <name>osErrIllegalUseOfFrozenInstance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a496010b9b2d3c906acddc961469c1408" prot="public">
          <name>osErrCompilationError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ae38ca7b628486aa10e6db2f516fac248" prot="public">
          <name>osErrNotImplemented</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aa49df6d73e0de5110ae9fa3668735471" prot="public">
          <name>osErrSyntaxWarning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a4c9079a6e36805e5240334413980c191" prot="public">
          <name>osErrWebRequiredFieldMissing</name>
          <initializer>= -800</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8aeaef8d940a152693f7b381d79e09b596" prot="public">
          <name>osErrWebRepeatingRelatedField</name>
          <initializer>= -801</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8afddc16ef01d1359848fb247f62c5f7df" prot="public">
          <name>osErrWebNoSuchObject</name>
          <initializer>= -1728</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8afa52df3a92a68b79f8a17ee62ac0177f" prot="public">
          <name>osErrWebTimeout</name>
          <initializer>= -1712</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a0c06890f4f4b0ecdcba379a567518d80" prot="public">
          <name>osErrWebActionNotSupported</name>
          <initializer>= -802</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8ac3c469a9e6032c90630e7b2323df798c" prot="public">
          <name>osErrConnectionInvalid</name>
          <initializer>= -609</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a163b11aa4fa2096067b21b71c2f781e4" prot="public">
          <name>osErrWebModuleNotFound</name>
          <initializer>= -2000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a0c02461c78a3226eb4a38ea07ecc8388" prot="public">
          <name>osErrHTTPFileNotFound</name>
          <initializer>= 404</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1acb77fd6a5f0f177b06847a629f6054e8a50cbe2eecc3b61b5e04e99a33af43ac8" prot="public">
          <name>osErrDatasourceError</name>
          <initializer>= -3000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aeac18a5c05e9673c6ca7d203ad9419f4" prot="public">
          <name>osErrNoErr</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab3839ea3070c5df835555b95ffed37ad" prot="public">
          <name>osErrAssert</name>
          <initializer>= -10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a6116be61c122713b40ddf4a0cf890aae" prot="public">
          <name>osErrStreamReadError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a162da7759b7df378e067b16df8247b4d" prot="public">
          <name>osErrStreamWriteError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a158737a73a0c47868ffd61aff32ddfbe" prot="public">
          <name>osErrMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aa843bbdffa1dc61b8160e1a893fe502f" prot="public">
          <name>osErrInvalidMemoryObject</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a5597315db6c3ecdaa2bde5c8f94c1f1a" prot="public">
          <name>osErrOutOfMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8abef6e1b22aab74921442e1a5a0a46e06" prot="public">
          <name>osErrOutOfStackSpace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8afbd4c6aa6b03a92a77dc69c66a114ee0" prot="public">
          <name>osErrCouldNotLockMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a0cd17e6425b9d4e4fcbfe91979b011da" prot="public">
          <name>osErrCouldNotUnlockMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a2ba9489788e59a790d3024e760f557c8" prot="public">
          <name>osErrCouldNotDisposeMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8adf4e665c66070ea583ce04813b7ce583" prot="public">
          <name>osErrFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab587f4712acc35e34b17074916a8f4a3" prot="public">
          <name>osErrFileInvalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a2999b658ff7af97b38913fd81822bf77" prot="public">
          <name>osErrFileInvalidAccessMode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4079fd183d4007d0243651de6f7b71d9" prot="public">
          <name>osErrCouldNotCreateOrOpenFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a881207ca5ee30f90e98615f3bee25fac" prot="public">
          <name>osErrCouldNotCloseFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a13b1c8996a9c04d1e0f341752a897370" prot="public">
          <name>osErrCouldNotDeleteFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a11b38d77494d48f4eddb24164a14fabd" prot="public">
          <name>osErrFileNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a306ebe76cd6da27ed66d54bb5e365ecb" prot="public">
          <name>osErrFileAlreadyExists</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ad75192ef4bd78ed9983b7d2f0ee9ef06" prot="public">
          <name>osErrFileCorrupt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a7e09412344c544a4d257c5a7606fe8fa" prot="public">
          <name>osErrVolumeDoesNotExist</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8af23c24ca29500e813ce2c9f94bc07217" prot="public">
          <name>osErrDiskFull</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8acec112b10c6608c0462c1c9b5c48c795" prot="public">
          <name>osErrDirectoryFull</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab59d03a1f1e4760ab4fbb5b9def7d6c5" prot="public">
          <name>osErrIOError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a2a74416e7aeb2da917f44d82ac81fe27" prot="public">
          <name>osErrInvalidPathname</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aa2f3d1baa6f56b782105235caf3253ee" prot="public">
          <name>osErrInvalidFilename</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aa7f695c6e34b56b6802a6cb2f5053472" prot="public">
          <name>osErrFileLocked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a0ad6e6479ac3132b6430fa7a7af9a0b9" prot="public">
          <name>osErrFileUnlocked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a1a6156d1a51b09a7febe7715d8de7530" prot="public">
          <name>osErrFileIsOpen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a148d81a5828db027d993a5a95259c2da" prot="public">
          <name>osErrFileIsClosed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a8079e5b2eba0d88b80ff731f6701c71e" prot="public">
          <name>osErrBOF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a8ab501b333177f68c82a6aeae03136e2" prot="public">
          <name>osErrEOF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a22110d8c0ea5425a128f0542b4d8b1af" prot="public">
          <name>osErrCouldNotWriteToFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4ce5711c5144a8ee469a9e6cea1dcdf3" prot="public">
          <name>osErrCouldNotReadFromFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4484a89e6d750dd73a191cb4b9b1da45" prot="public">
          <name>osErrResNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab6be63efb715368fd6745d32628616e3" prot="public">
          <name>osErrResource</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4e6c7f03f334fda11d9dbd28f9ae5ab7" prot="public">
          <name>osErrNetwork</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a1ccf71b15cb917949cecc46a20ed328f" prot="public">
          <name>osErrInvalidUsername</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a1df43e026d91a2db73dc13a95f5f91c7" prot="public">
          <name>osErrInvalidPassword</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a25d1ae124ca6ca61ce2baba59c737f92" prot="public">
          <name>osErrInvalidDatabase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4b55e92d6148498be49fdd08577201bc" prot="public">
          <name>osErrNoPermission</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a2166f60a75a385eb6a87662048f9e0ee" prot="public">
          <name>osErrFieldRestriction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab01cf144986e8a24ae4dee57e4854bdf" prot="public">
          <name>osErrWebAddError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a903f6dd1b29ec86a672c9c926c3cda74" prot="public">
          <name>osErrWebUpdateError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a1742d37201111faa2b5ecf1add56334f" prot="public">
          <name>osErrWebDeleteError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a165a39094b5fc02f7c0ae73e97c4a619" prot="public">
          <name>osErrInvalidParameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab4a58f9038b5849814792f8658d490b1" prot="public">
          <name>osErrOverflow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8af5c916c4e4c6496495aba419562d1bbc" prot="public">
          <name>osErrNilPointer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a6d05dd2a75426e04e6e9b7df41934820" prot="public">
          <name>osErrUnknownError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a99c8c47253710ec486f16763c6339351" prot="public">
          <name>osErrLoopAborted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aff3f764dccd3320e959cab01ff0e4c00" prot="public">
          <name>osErrSyntaxError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8acd13a765be9ed6a6c11f9810b92324be" prot="public">
          <name>osErrDivideByZero</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8abd3ee4692632e70dfa33b0ac196358a5" prot="public">
          <name>osErrIllegalInstruction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8af36e663e99dd7be1565c11d67788805c" prot="public">
          <name>osErrTagNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a9ae8ae144798549cceb3975a700f4919" prot="public">
          <name>osErrVarNotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8adc1e0271d310a66b9631319a517859c1" prot="public">
          <name>osErrAborted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a57755f5fd3764999bc872fc7afc52a16" prot="public">
          <name>osErrFailure</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ad887426e53b2e4cb0611d5d6c14c3ae8" prot="public">
          <name>osErrPreconditionFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ad7880fcacd0d8fa914a87b3cf800d6cf" prot="public">
          <name>osErrPostconditionFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ab45b4e2d1ddb403575c99e7bee0c4522" prot="public">
          <name>osErrCriteriaNotMet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4a0693d3eba1270415180290b74da23d" prot="public">
          <name>osErrIllegalUseOfFrozenInstance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a496010b9b2d3c906acddc961469c1408" prot="public">
          <name>osErrCompilationError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ae38ca7b628486aa10e6db2f516fac248" prot="public">
          <name>osErrNotImplemented</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aa49df6d73e0de5110ae9fa3668735471" prot="public">
          <name>osErrSyntaxWarning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a4c9079a6e36805e5240334413980c191" prot="public">
          <name>osErrWebRequiredFieldMissing</name>
          <initializer>= -800</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8aeaef8d940a152693f7b381d79e09b596" prot="public">
          <name>osErrWebRepeatingRelatedField</name>
          <initializer>= -801</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8afddc16ef01d1359848fb247f62c5f7df" prot="public">
          <name>osErrWebNoSuchObject</name>
          <initializer>= -1728</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8afa52df3a92a68b79f8a17ee62ac0177f" prot="public">
          <name>osErrWebTimeout</name>
          <initializer>= -1712</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a0c06890f4f4b0ecdcba379a567518d80" prot="public">
          <name>osErrWebActionNotSupported</name>
          <initializer>= -802</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8ac3c469a9e6032c90630e7b2323df798c" prot="public">
          <name>osErrConnectionInvalid</name>
          <initializer>= -609</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a163b11aa4fa2096067b21b71c2f781e4" prot="public">
          <name>osErrWebModuleNotFound</name>
          <initializer>= -2000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a0c02461c78a3226eb4a38ea07ecc8388" prot="public">
          <name>osErrHTTPFileNotFound</name>
          <initializer>= 404</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_defines_8h_1acb77fd6a5f0f177b06847a629f6054e8a50cbe2eecc3b61b5e04e99a33af43ac8" prot="public">
          <name>osErrDatasourceError</name>
          <initializer>= -3000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="92" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="91" bodyend="196"/>
      </memberdef>
      <memberdef kind="enum" id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7c" prot="public" static="no">
        <name>datasource_action_t</name>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca229f8ea3fb6e5cee1b39fb1c63c294cb" prot="public">
          <name>datasourceInit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when a new &quot;instance&quot; of the datasource module is created. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cacd8961329d6e31729f5a5b45cb7800eb" prot="public">
          <name>datasourceTerm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the &quot;instance&quot; of the datasource module is destroyed. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca90961797dd31dde39d7dd1d3731ffa63" prot="public">
          <name>datasourceExists</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca6c0c4c97dfb73dd43a08d760952a4a0a" prot="public">
          <name>datasourceNames</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when Lasso attempts to gather the names of all the databases that the datasource module supports. Call lasso_addDataSourceResult once for each supported database. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caed40e6bf68753e0bd62d08da86a5b172" prot="public">
          <name>datasourceTableNames</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when Lasso attempts to gather the names of the tables available for the given database. The name of the database itself will be passed in the <emphasis>param</emphasis> parameter. Call lasso_addDataSourceResult once for each available table. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cae883846b7bf5b1b6145d1134c8d4bdbd" prot="public">
          <name>datasourceSearch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -search action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca6655486e7c643eba5dbc7a615dfe69a0" prot="public">
          <name>datasourceAdd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -add action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca39fc1bf2ee94acab00e8e00b1a0efbd7" prot="public">
          <name>datasourceUpdate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -update action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca3aa05625a99339103f59f89385412642" prot="public">
          <name>datasourceDelete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -delete action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cab9a326f3273f9b9c15115cc0e671758a" prot="public">
          <name>datasourceInfo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -show action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca3690ff7c20b4ee8aebba2f4948a06c3f" prot="public">
          <name>datasourceExecSQL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -sql action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca0566ec7827223f579ef604451bfa7879" prot="public">
          <name>datasourceRandom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -random action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca34159e621460a6a922c8f56a659d93c5" prot="public">
          <name>datasourceSchemaNames</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when Lasso attempts to gather the names of the schemas available for the given database. The name of the database itself will be passed in the <emphasis>param</emphasis> parameter. Call lasso_addDataSourceResult once for each available schema.</para><para>This is currently only utilized for LJAPI. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca73adb6143988bcb5271534ad96e7ff7b" prot="public">
          <name>datasourceCloseConnection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module should close a connection previously set via the lasso_setDSConnection function. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca1f5aa19550c1566751e2b6bd45be68fb" prot="public">
          <name>datasourceTickle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent to the datasource module when -database and -table are specified in an inline, but no action, or a -nothing action is used. The database could, perhaps, set or reset its connection to the database via lasso_setDSConnection. Or, it could do nothing. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caaa31b59fd2a526f96ba9e0654b81232e" prot="public">
          <name>datasourceDuplicate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caeb07efe280b4bec157c2b8e45a646f17" prot="public">
          <name>datasourceScripts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca2aec907dd1e4d7696be148edb746000b" prot="public">
          <name>datasourceImage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca16cadb9605a03b9086e052fe5b93850d" prot="public">
          <name>datasourceFindAll</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent when the datasource module is to perform a -findall action. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caeb69ae07df38d872d4b3c8ac542b8bb8" prot="public">
          <name>datasourceMatchesName</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent to the datasource to find out if it &quot;goes&quot; under the given name. The name which is being tested will be passed in the name member of the <emphasis>param</emphasis> parameter. The data member of the <emphasis>param</emphasis> parameter will be NULL and the dataSize member will be zero. If the name matches the name the datasource goes under, the datasource should both set the dataSize member to non-zero and return osErrNoErr. Otherwise, it is assumed that the name is not a matching name for the datasource module. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca2ceba05b9b083baa6e80341988279591" prot="public">
          <name>datasourcePrepareSQL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent to the datasource to prepare a sql statement for later execution. This is sent when the datasource action was -prepare. The statement text is sent to the datasource in the <emphasis>data</emphasis> member of the <emphasis>param</emphasis> parameter that is passed to each datasource call. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca87a96d532d9710dccd01ae8d21796416" prot="public">
          <name>datasourceUnprepareSQL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent to the datasource after a datasourcePrepareSQL action. This permits the datasource to perform and necessary cleanup activities after executing a prepared statement. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca804ef57e7555f4a233fc3ff859beacdf" prot="public">
          <name>datasourceMAXIMUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca68a5257c44345d0d3c6d44f6ebbcc95b" prot="public">
          <name>datasourceNothing</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of actions datasources could be called for. </para>        </briefdescription>
        <detaileddescription>
<para>One of these will be passed as the <emphasis>action</emphasis> parameter for the lasso_ds_func. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="465" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="464" bodyend="522"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1ad7df35034fc22ecaf515fc8b9b79fcda" prot="public" static="no">
        <type>enum lpEncodingType</type>
        <definition>typedef enum lpEncodingType  encodingMethod</definition>
        <argsstring></argsstring>
        <name>encodingMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="87"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1acd3e65cd69e87de888751e31d451cdd3" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int LP_TypeDesc</definition>
        <argsstring></argsstring>
        <name>LP_TypeDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="207" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" prot="public" static="no">
        <type><ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref></type>
        <definition>typedef lasso_value_t auto_lasso_value_t</definition>
        <argsstring></argsstring>
        <name>auto_lasso_value_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Special typedef so programmers know when Lasso will automatically dispose of the value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="380" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" prot="public" static="no">
        <type><ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref></type>
        <definition>typedef lasso_value_w_t auto_lasso_value_w_t</definition>
        <argsstring></argsstring>
        <name>auto_lasso_value_w_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Special typedef so programmers know when Lasso will automatically dispose of the value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="384" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a4255b3d65589fa8026bf517ccdc6eee3" prot="public" static="no">
        <type>int</type>
        <definition>typedef int tag_action_t</definition>
        <argsstring></argsstring>
        <name>tag_action_t</name>
        <briefdescription>
<para>Types of actions tag modules could be called for. </para>        </briefdescription>
        <detaileddescription>
<para>Ignore this for now, it may be put into use in a future version but is not utliized at present. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="534" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" prot="public" static="no">
        <type>struct <ref refid="structlasso__request__t__" kindref="compound">lasso_request_t_</ref> *</type>
        <definition>typedef struct lasso_request_t_ *  lasso_request_t</definition>
        <argsstring></argsstring>
        <name>lasso_request_t</name>
        <briefdescription>
<para>Special value passed to modules that identify the request. </para>        </briefdescription>
        <detaileddescription>
<para>The same value should be used when calling into any LassoCAPI function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="544"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" prot="public" static="no">
        <type>struct <ref refid="structlasso__type__t__" kindref="compound">lasso_type_t_</ref> *</type>
        <definition>typedef struct lasso_type_t_ *  lasso_type_t</definition>
        <argsstring></argsstring>
        <name>lasso_type_t</name>
        <briefdescription>
<para>Represents a type within Lasso. </para>        </briefdescription>
        <detaileddescription>
<para>This opaque value represents an instance of a type within Lasso </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="554"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a21d10c8c1936424c035994a8e878ac0d" prot="public" static="no">
        <type>struct <ref refid="structlasso__dsconnection__t__" kindref="compound">lasso_dsconnection_t_</ref> *</type>
        <definition>typedef struct lasso_dsconnection_t_ *  lasso_dsconnection_t</definition>
        <argsstring></argsstring>
        <name>lasso_dsconnection_t</name>
        <briefdescription>
<para>Represents a datasource module connection. </para>        </briefdescription>
        <detaileddescription>
<para>This opaque value is only interpreted by the datasource module itself. It can be stored via lasso_setDSConnection and retrieved via lasso_getDSConnection. Lasso will automatically send the datasource the datasourceCloseConnection message when it is time to close the connection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="567"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" prot="public" static="no">
        <type>osError(*</type>
        <definition>typedef osError(* lasso_ds_func)(lasso_request_t token, datasource_action_t action, const auto_lasso_value_t *param)</definition>
        <argsstring>)(lasso_request_t token, datasource_action_t action, const auto_lasso_value_t *param)</argsstring>
        <name>lasso_ds_func</name>
        <briefdescription>
<para>Service function for Lasso Datasource modules. </para>        </briefdescription>
        <detaileddescription>
<para>A LCAPI datasource module should implement one of these and pass it to the lasso_registerDSModule or lasso_registerDSModuleW function when the datasource module is registered. The function will be called by Lasso when a datasource operation is to be performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The current action for the datasource module to perform. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Any additional data associated with the action. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="583" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" prot="public" static="no">
        <type>osError(*</type>
        <definition>typedef osError(* lasso_tag_func)(lasso_request_t token, tag_action_t action)</definition>
        <argsstring>)(lasso_request_t token, tag_action_t action)</argsstring>
        <name>lasso_tag_func</name>
        <briefdescription>
<para>Service function for a Lasso tag. </para>        </briefdescription>
        <detaileddescription>
<para>An LCAPI tag should implement one of these and pass it to the lasso_registerTagModule or lasso_registerTagModuleW function when the LCAPI module is registered. The function will be called by Lasso every time the tag is called in a script.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>Unused. Do not rely on this parameter to hold any particular value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="594" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1adbbe9a0b0a3c54d20dce932c3a61427a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* register_module_func)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>register_module_func</name>
        <briefdescription>
<para>LCAPI module registration callback. </para>        </briefdescription>
        <detaileddescription>
<para>All Lasso modules must export a function named &quot;registerLassoModule&quot;. When Lasso attempts to load an LCAPI module, it will look for this exported funtion and, if found, call it. Within that function, the user may register any number of datasource modules or any number of tags using the lasso_registerDSModule, lasso_registerDSModuleW, lasso_registerTagModule or lasso_registerTagModuleW functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="607" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lasso_c_a_p_i_8h_1ae52243324b00de3f88b8ac466da60b2d" prot="public" static="no">
        <type>char</type>
        <definition>typedef char osPathname[1024]</definition>
        <argsstring>[1024]</argsstring>
        <name>osPathname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2096" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="2096" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a3da6f60cb477dad03c9b495c9799b407" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kNumErrors</definition>
        <argsstring></argsstring>
        <name>kNumErrors</name>
        <initializer>= 71</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="89" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lasso_c_a_p_i_8h_1a2964e7b8f412c7259b51784961bdda92" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kMaxPathLen</definition>
        <argsstring></argsstring>
        <name>kMaxPathLen</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2095" bodyfile="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" bodystart="2095" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af30bb94cc1926d128408e453dfe8ff48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_allocValue</definition>
        <argsstring>(lasso_value_t *result, const char *name, unsigned int nameSize, const char *data, unsigned int dataSize, LP_TypeDesc type)</argsstring>
        <name>lasso_allocValue</name>
        <param>
          <type><ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nameSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dataSize</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Allocates a <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> with the indicated data. </para>        </briefdescription>
        <detaileddescription>
<para>Anything allocated with this function will NOT be garbage collected by Lasso and must be freed using lasso_freeValue.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> which will be constructed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name portion which will be copied and set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nameSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the name parameter in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data portion which will be copied and set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data parameter in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code for the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="400"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aeca745b3901ea3ffdca5dd51525fb26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_allocValueW</definition>
        <argsstring>(lasso_value_w_t *result, const UChar *name, unsigned int nameSize, const UChar *data, unsigned int dataSize, LP_TypeDesc type)</argsstring>
        <name>lasso_allocValueW</name>
        <param>
          <type><ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nameSize</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dataSize</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Allocates a <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> with the indicated data. </para>        </briefdescription>
        <detaileddescription>
<para>Anything allocated with this function will NOT be garbage collected by Lasso and must be freed using lasso_freeValueW.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> which will be constructed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name portion which will be copied and set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nameSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters in the name portion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data portion which will be copied and set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters in the data portion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code for the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="415"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a5575a7f410475bf53025ace6ffd35105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_allocValueConv</definition>
        <argsstring>(lasso_value_t *result, const UChar *name, unsigned int nameSize, const char *nameEncoding, const UChar *data, unsigned int dataSize, const char *dataEncoding, LP_TypeDesc type)</argsstring>
        <name>lasso_allocValueConv</name>
        <param>
          <type><ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nameSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nameEncoding</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dataSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dataEncoding</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Allocates a <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> with the indicated data and encoding method. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to convert Unicode data into any of the supported encodings.</para><para>Anything allocated with this function will NOT be garbage collected by Lasso and must be freed using lasso_freeValue.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> which will be constructed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name portion which will be converted and set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nameSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters in the name portion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nameEncoding</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination encoding for the name portion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data portion which will be converted and set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters in the data portion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataEncoding</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination encoding for the data portion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code for the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="435"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a8e15163d623e05abeaa88bb0ae60ca49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_freeValue</definition>
        <argsstring>(lasso_value_t *result)</argsstring>
        <name>lasso_freeValue</name>
        <param>
          <type><ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Frees a previously allocated <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Do not pass an auto_lasso_value_t to this function or you will end up with a double free.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structlasso__value__t" kindref="compound">lasso_value_t</ref> whose members will be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="444"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab92c99ce396a91d8774d7d2d5bfb69c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_freeValueW</definition>
        <argsstring>(lasso_value_w_t *result)</argsstring>
        <name>lasso_freeValueW</name>
        <param>
          <type><ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Frees a previously allocated <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Do not pass an auto_lasso_value_w_t to this function or you will end up with a double free.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structlasso__value__w__t" kindref="compound">lasso_value_w_t</ref> whose members will be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="453"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af44407d002bb7de1e7966b928be15bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerTagModule</definition>
        <argsstring>(const char *namespaceName, const char *tagName, lasso_tag_func func, int flags, const char *description)</argsstring>
        <name>lasso_registerTagModule</name>
        <param>
          <type>const char *</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tagName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespaceName</parametername>
</parameternamelist>
<parameterdescription>
<para>The namespace in which the tag will be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name which the tag can be called by. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The user supplied callback for the tag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Any special flags for the tag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>A description for the tag. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="722"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab5602299e36bcd7360014c275f9ce062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerTagModuleW</definition>
        <argsstring>(const UChar *namespaceName, const UChar *tagName, lasso_tag_func func, int flags, const UChar *description)</argsstring>
        <name>lasso_registerTagModuleW</name>
        <param>
          <type>const UChar *</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>tagName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="723"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a18083de9afa416d66504f4fb10c0e8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetTrait</definition>
        <argsstring>(lasso_request_t token, lasso_type_t from, lasso_type_t *into)</argsstring>
        <name>lasso_typeGetTrait</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>into</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="758"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a8f0abc876c38cd6c5e9e08db1b504159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setResultMessage</definition>
        <argsstring>(lasso_request_t token, const char *msg)</argsstring>
        <name>lasso_setResultMessage</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set result message string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The result message string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="766"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a5117e05de3f91f01e26faaa74b083b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setResultMessageW</definition>
        <argsstring>(lasso_request_t token, const UChar *msg)</argsstring>
        <name>lasso_setResultMessageW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set result message string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The result message string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="774"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a3cd85e3035b173f327fdd0661e2baafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAlloc</definition>
        <argsstring>(lasso_request_t token, const char *typeName, int paramCount, lasso_type_t *paramsArray, lasso_type_t *outType)</argsstring>
        <name>lasso_typeAlloc</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paramCount</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>paramsArray</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outType</declname>
        </param>
        <briefdescription>
<para>Allocates a new type instance. </para>        </briefdescription>
        <detaileddescription>
<para>The name of the type to allocate is signified by the second parameter. If a type initializer is found for the given name, it will be executed. An array of lasso_type_t parameters can be passed to the type initializer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the type to instantiate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lasso_type_t parameters to pass to the initializer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of parameters to pass to the type initializer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outType</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the newly instantiated type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="789"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a99d34189b7274fb7702a1ceaeed5c3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocW</definition>
        <argsstring>(lasso_request_t token, const UChar *typeName, int paramCount, lasso_type_t *paramsArray, lasso_type_t *outType)</argsstring>
        <name>lasso_typeAllocW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paramCount</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>paramsArray</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outType</declname>
        </param>
        <briefdescription>
<para>Allocates a new type instance. </para>        </briefdescription>
        <detaileddescription>
<para>The name of the type to allocate is signified by the second parameter. If a type initializer is found for the given name, it will be executed. An array of lasso_type_t parameters can be passed to the type initializer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the type to instantiate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lasso_type_t parameters to pass to the initializer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of parameters to pass to the type initializer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outType</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the newly instantiated type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="803"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a703ba3822cc42411ab2c579915709dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocCustom</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outCustom, const char *name)</argsstring>
        <name>lasso_typeAllocCustom</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outCustom</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Allocates a custom type within a type initializer. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used within lasso_tag_funcs that were registered as being a type initializer (flag_typeInitializer). It initializes a blank custom type and sets the type&apos;s name to the provided value. The new type does not yet have a lineage and has no members added to it. New data or tag members should be added using lasso_typeAddMember. The new type must be the return value of the tag call, set via lasso_returnTagValue. Any inherited members will be added to the type after the LCAPI call returns.</para><para><simplesect kind="warning"><para>Do NOT call this unless you are in a type initializer. If you are not in a type initializer, the result will be a type that will never be fully initialized.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outCustom</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting newly allocated custom type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The new type&apos;s name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="821"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a8a2d303b5fac1fb50fecf250b9ee72dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocCustomW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *outCustom, const UChar *name)</argsstring>
        <name>lasso_typeAllocCustomW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>outCustom</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Allocates a custom type within a type initializer. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used within lasso_tag_funcs that were registered as being a type initializer (flag_typeInitializer). It initializes a blank custom type and sets the type&apos;s name to the provided value. The new type does not yet have a lineage and has no members added to it. New data or tag members should be added using lasso_typeAddMember. The new type must be the return value of the tag call, set via lasso_returnTagValue. Any inherited members will be added to the type after the LCAPI call returns.</para><para><simplesect kind="warning"><para>Do NOT call this unless you are in a type initializer. If you are not in a type initializer, the result will be a type that will never be fully initialized.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outCustom</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting newly allocated custom type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The new type&apos;s name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="839"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aa4fae819ca35ceaba1eed693d17c89a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAllocFromProto</definition>
        <argsstring>(lasso_request_t token, lasso_type_t proto, lasso_type_t *out)</argsstring>
        <name>lasso_typeAllocFromProto</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>proto</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Allocate a new type instance based on the given type instance. </para>        </briefdescription>
        <detaileddescription>
<para>The given type&apos;s tag members will be referenced in the new type. No data members are added to the new type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proto</parametername>
</parameternamelist>
<parameterdescription>
<para>The original type instance whose tag members will be referenced. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting new type instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="852"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab04eba658a5c5ab9031f722b4c471d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddMember</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const char *named, lasso_type_t member)</argsstring>
        <name>lasso_typeAddMember</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para>If the new member is a tag, it will be added to the tag members for the type. Otherwise, the new member will be added as a data member.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The new member to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1167"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a928e2ff7121f93a539b49160642e53d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddMemberW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const UChar *named, lasso_type_t member)</argsstring>
        <name>lasso_typeAddMemberW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para>If the new member is a tag, it will be added to the tag members for the type. Otherwise, the new member will be added as a data member.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The new member to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1179"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af63ba8e23d0dff4810767d5873c9e31f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddTagMember</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const char *named, lasso_type_t member)</argsstring>
        <name>lasso_typeAddTagMember</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a tag member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new tag member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The new tag member to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1189"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a6980b2e1b86637a9ceae84d1ea852f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddTagMember2</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const char *named, lasso_tag_func nativeTagFunction)</argsstring>
        <name>lasso_typeAddTagMember2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>nativeTagFunction</declname>
        </param>
        <briefdescription>
<para>Adds a tag member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new tag member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nativeTagFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>The function add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1199"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab75c18247d7de9cd8e14fcdf2aad4f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddDataMember</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const char *named, lasso_type_t member)</argsstring>
        <name>lasso_typeAddDataMember</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a data member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new data member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The new data member to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1209"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ac8fd31e332551ee3116f93730ccd2f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddTagMemberW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const UChar *named, lasso_type_t member)</argsstring>
        <name>lasso_typeAddTagMemberW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a tag member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new tag member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The new tag member to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1219"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a493d1a2f0ab6b2e4170ba812bd782845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddTagMember2W</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const UChar *named, lasso_tag_func nativeTagFunction)</argsstring>
        <name>lasso_typeAddTagMember2W</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member">lasso_tag_func</ref></type>
          <declname>nativeTagFunction</declname>
        </param>
        <briefdescription>
<para>Adds a tag member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new tag member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nativeTagFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1229"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aec6626fae305ff65fc73cfc94673e7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeAddDataMemberW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t to, const UChar *named, lasso_type_t member)</argsstring>
        <name>lasso_typeAddDataMemberW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a data member to a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to which the new data member will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The new data member to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1239"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a53451f170615b86f63d099fa5acefa5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetDataMember</definition>
        <argsstring>(lasso_request_t token, lasso_type_t from, const char *named, lasso_type_t *out)</argsstring>
        <name>lasso_typeGetDataMember</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Retrieves a data member from a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance in which to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the member to look for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a type instance in which to store the found member. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1249"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4066d088914a54cc16d47a98be004807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetDataMemberW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t from, const UChar *named, lasso_type_t *out)</argsstring>
        <name>lasso_typeGetDataMemberW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Retrieves a data member from a type instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance in which to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the member to look for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a type instance in which to store the found member. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1259"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a6146286dc704a30f2e685fd919519cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setPtrMember</definition>
        <argsstring>(lasso_request_t token, lasso_type_t self, const char *name, void *data, void(*dtor)(void *))</argsstring>
        <name>lasso_setPtrMember</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>dtor</declname>
        </param>
        <briefdescription>
<para>Allows storage of an opaque pointer value. </para>        </briefdescription>
        <detaileddescription>
<para>The pointer member is given and name and is stored as an integer in the type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance in which to add the pointer member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer value which will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a function which will be called when the member is destroyed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1274"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a319477e3f225d33a60d329d9721df4b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setPtrMember2</definition>
        <argsstring>(lasso_request_t token, lasso_type_t from, const char *name, void *data, void(*dtor)(void *obj), void *(*copyFunc)(void *obj))</argsstring>
        <name>lasso_setPtrMember2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *obj)</type>
          <declname>dtor</declname>
        </param>
        <param>
          <type>void *(*)(void *obj)</type>
          <declname>copyFunc</declname>
        </param>
        <briefdescription>
<para>Allows storage of an opaque pointer value. </para>        </briefdescription>
        <detaileddescription>
<para>The pointer member is given and name and is stored as an integer in the type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance in which to add the pointer member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer value which will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a function which will be called when the member is destroyed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copyFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a function which will be called when the member is copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1288"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab95de1d4e36e5a1b202f24020ce6c250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setPtrMemberW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t self, const UChar *name, void *data, void(*dtor)(void *))</argsstring>
        <name>lasso_setPtrMemberW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>dtor</declname>
        </param>
        <briefdescription>
<para>Allows storage of an opaque pointer value. </para>        </briefdescription>
        <detaileddescription>
<para>The pointer member is given and name and is stored as an integer in the type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance in which to add the pointer member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer value which will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a function which will be called when the member is destroyed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1301"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afdcc165bb2b339c862f42f6c4502c13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setPtrMember2W</definition>
        <argsstring>(lasso_request_t token, lasso_type_t from, const UChar *named, void *data, void(*dtor)(void *obj), void *(*copyFunc)(void *obj))</argsstring>
        <name>lasso_setPtrMember2W</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *obj)</type>
          <declname>dtor</declname>
        </param>
        <param>
          <type>void *(*)(void *obj)</type>
          <declname>copyFunc</declname>
        </param>
        <briefdescription>
<para>Allows storage of an opaque pointer value. </para>        </briefdescription>
        <detaileddescription>
<para>The pointer member is given and name and is stored as an integer in the type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance in which to add the pointer member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>named</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer value which will be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a function which will be called when the member is destroyed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copyFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a function which will be called when the member is copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1315"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1af20c9fa4eb0d25c5e35d9c8f11e9b08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getPtrMember</definition>
        <argsstring>(lasso_request_t token, lasso_type_t self, const char *name, void **data)</argsstring>
        <name>lasso_getPtrMember</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Retrieves a previously added pointer value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the previously added pointer value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a void * in which to store the found value.s </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1325"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1aa34b3b48a9d417fd5db0fbd55f901f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getPtrMemberW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t self, const UChar *name, void **data)</argsstring>
        <name>lasso_getPtrMemberW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Retrieves a previously added pointer value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance from which to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the previously added pointer value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a void * in which to store the found value.s </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1335"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ad472d1e8cdc43876a1877a5a5f828682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagSelf</definition>
        <argsstring>(lasso_request_t token, lasso_type_t *self)</argsstring>
        <name>lasso_getTagSelf</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Returns the type instance that the current tag call was a member of. </para>        </briefdescription>
        <detaileddescription>
<para>This is used in member tags of custom types to return the target of the current call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer in which to store the resulting type instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1345"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a25610de5c5eb7c89448d99ed227b16a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetName</definition>
        <argsstring>(lasso_request_t token, lasso_type_t target, auto_lasso_value_t *outName)</argsstring>
        <name>lasso_typeGetName</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>outName</declname>
        </param>
        <briefdescription>
<para>Returns the name of the target type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to get the name of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outName</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting name which will be stored in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1354"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a1d1ef7f682de82f02b384d9ad867c0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeGetNameW</definition>
        <argsstring>(lasso_request_t token, lasso_type_t target, auto_lasso_value_w_t *outName)</argsstring>
        <name>lasso_typeGetNameW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" kindref="member">auto_lasso_value_w_t</ref> *</type>
          <declname>outName</declname>
        </param>
        <briefdescription>
<para>Returns the name of the target type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The type instance to get the name of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outName</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting name which will be stored in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1363"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afb32edeb9f7f76f6905c67b1c4a81a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeIsA</definition>
        <argsstring>(lasso_request_t token, lasso_type_t target, LP_TypeDesc type)</argsstring>
        <name>lasso_typeIsA</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>LP_TypeDesc</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Tests to see if a type is an instance of another type. </para>        </briefdescription>
        <detaileddescription>
<para>Test by type code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target instance to test. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code to test for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1374"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a02e3ffdf383708291b8478490045aa91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeIsA2</definition>
        <argsstring>(lasso_request_t token, lasso_type_t target, const char *typeName)</argsstring>
        <name>lasso_typeIsA2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
<para>Tests to see if a type is an instance of another type. </para>        </briefdescription>
        <detaileddescription>
<para>Test by type name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target instance to test. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>The type name to test for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1385"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1abcb623bcae6aa1fc1c3e36271bacb1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeIsA2W</definition>
        <argsstring>(lasso_request_t token, lasso_type_t target, const UChar *typeName)</argsstring>
        <name>lasso_typeIsA2W</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
<para>Tests to see if a type is an instance of another type. </para>        </briefdescription>
        <detaileddescription>
<para>Test by type name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target instance to test. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>The type name to test for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1396"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a2ac2a45968279f970759a44d78d16aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_typeIsA3</definition>
        <argsstring>(lasso_request_t token, lasso_type_t target, lasso_type_t type)</argsstring>
        <name>lasso_typeIsA3</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Tests to see if a type is an instance of another type. </para>        </briefdescription>
        <detaileddescription>
<para>Test based on another type instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target instance to test. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type name to test for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1407"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a3c3fc793f0867a788670ad5943e00ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValue</definition>
        <argsstring>(lasso_request_t token, lasso_type_t value)</argsstring>
        <name>lasso_returnTagValue</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Specifies the return value of the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>Any type can be returned. A tag can only have one return value. Setting another return value will overwrite the previous.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1418"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a74d6cf3311d7f6382be65c1ba2ce3117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValueBoolean</definition>
        <argsstring>(lasso_request_t token, bool b)</argsstring>
        <name>lasso_returnTagValueBoolean</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Return a boolean value from the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The boolean value to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1426"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ad079e626412cf0629a98597cb4bf063d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValueInteger</definition>
        <argsstring>(lasso_request_t token, int64_t i)</argsstring>
        <name>lasso_returnTagValueInteger</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return an integer value from the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1434"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a1e5bddb270e8d68c0f0d83f243c7d045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValueString</definition>
        <argsstring>(lasso_request_t token, const char *p, int l)</argsstring>
        <name>lasso_returnTagValueString</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Return a string value from the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The character data to be returned. The data should be in UTF-8 encoding. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the character data to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1443"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a2b416ac10e54baebd22f4be2b09421cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValueStringW</definition>
        <argsstring>(lasso_request_t token, const UChar *p, int l)</argsstring>
        <name>lasso_returnTagValueStringW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Return a string value from the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The character data to be returned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the character data to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1452"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afda8633f2ad8bc822845dea03385d23c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValueDecimal</definition>
        <argsstring>(lasso_request_t token, double d)</argsstring>
        <name>lasso_returnTagValueDecimal</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return a decimal value from the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1460"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a6eeb1b093f871081dc07cd1d94296e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_returnTagValueBytes</definition>
        <argsstring>(lasso_request_t token, const char *data, int length)</argsstring>
        <name>lasso_returnTagValueBytes</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Return binary data from the current LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>When using this, the result of the LCAPI call will be a bytes type. This can be called as many times as needed and new data will be appended to any previous data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary data to return. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1472"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a5c364416a3624ef69fa3437bb86305c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagParam2</definition>
        <argsstring>(lasso_request_t token, int paramIndex, lasso_type_t *result)</argsstring>
        <name>lasso_getTagParam2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paramIndex</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter that was passed to the LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter index is zero based.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1483"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ac2f574e99cc556df7903f1d1a16a661d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_findTagParam2</definition>
        <argsstring>(lasso_request_t token, const char *paramName, lasso_type_t *result)</argsstring>
        <name>lasso_findTagParam2</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter that was passed to the LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter must have been specified by keyword.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyword of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1495"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a445c3d089975f31d02081ce6cf6f48d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_findTagParam2W</definition>
        <argsstring>(lasso_request_t token, const UChar *paramName, lasso_type_t *result)</argsstring>
        <name>lasso_findTagParam2W</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter that was passed to the LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter must have been specified by keyword.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyword of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1506"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a599f66e3caa848e20d0dcce1ba0392c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerConstant2</definition>
        <argsstring>(const char *namespaceName, const char *name, lasso_type_t val)</argsstring>
        <name>lasso_registerConstant2</name>
        <param>
          <type>const char *</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Register a constant value. </para>        </briefdescription>
        <detaileddescription>
<para>Constants can be called just like tags, but the resulting value will only have a single instance and will have both it&apos;s type and value frozen. This is usually called at the same time that tags are registered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespaceName</parametername>
</parameternamelist>
<parameterdescription>
<para>The namespace for the constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for the constant. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1518"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab5b3d6b8825fa74d9fc5b1f69aecce84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerConstant2W</definition>
        <argsstring>(const UChar *namespaceName, const UChar *name, lasso_type_t val)</argsstring>
        <name>lasso_registerConstant2W</name>
        <param>
          <type>const UChar *</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Register a constant value. </para>        </briefdescription>
        <detaileddescription>
<para>Constants can be called just like tags, but the resulting value will only have a single instance and will have both it&apos;s type and value frozen. This is usually called at the same time that tags are registered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespaceName</parametername>
</parameternamelist>
<parameterdescription>
<para>The namespace for the constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for the constant. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1530"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a12803501a95643f6ac3674c9b020b63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerConstant</definition>
        <argsstring>(const char *name, lasso_type_t val)</argsstring>
        <name>lasso_registerConstant</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Register a constant value. </para>        </briefdescription>
        <detaileddescription>
<para>Constants can be called just like tags, but the resulting value will only have a single instance and will have both it&apos;s type and value frozen. This is usually called at the same time that tags are registered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for the constant. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1541"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a5afd10e7d735e732bb149e75843e095e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_registerConstantW</definition>
        <argsstring>(const UChar *name, lasso_type_t val)</argsstring>
        <name>lasso_registerConstantW</name>
        <param>
          <type>const UChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member">lasso_type_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Register a constant value. </para>        </briefdescription>
        <detaileddescription>
<para>Constants can be called just like tags, but the resulting value will only have a single instance and will have both it&apos;s type and value frozen. This is usually called at the same time that tags are registered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for the constant. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1552"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4aebcb915ae1d73f63eee3b1b3105e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagName</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_t *result)</argsstring>
        <name>lasso_getTagName</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fetches the name of the tag that triggered this call. </para>        </briefdescription>
        <detaileddescription>
<para>For example, in the case of: [my_tag: ...] the resulting value would be &quot;tag&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting tag name which will be placed in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1562"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afe736ceca981f8ee0e099110269b7466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagNameW</definition>
        <argsstring>(lasso_request_t token, auto_lasso_value_w_t *result)</argsstring>
        <name>lasso_getTagNameW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" kindref="member">auto_lasso_value_w_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fetches the name of the tag that triggered this call. </para>        </briefdescription>
        <detaileddescription>
<para>For example, in the case of: [my_tag: ...] the resulting value would be &quot;tag&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting tag name which will be placed in the <emphasis>name</emphasis> portion of the struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1572"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a56c2350d6be72331cb030e4766b0f10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagParamCount</definition>
        <argsstring>(lasso_request_t token, int *result)</argsstring>
        <name>lasso_getTagParamCount</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fetches the number of parameters that were passed to the tag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer in which to store the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1580"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a4ef233c50567f37855603dc058efe406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagParam</definition>
        <argsstring>(lasso_request_t token, int paramIndex, auto_lasso_value_t *result)</argsstring>
        <name>lasso_getTagParam</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paramIndex</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fetches the indicated parameter that was sent to the tag. </para>        </briefdescription>
        <detaileddescription>
<para>Parameter indexes start at zero. If the parameter was specified as a keyword/value pair, the keyword will be placed in the <emphasis>name</emphasis> portion of the struct and the value in the <emphasis>data</emphasis> portion. If the parameter was provided without a keyword, the <emphasis>name</emphasis> portion of the struct will be NULL.</para><para>All parameters values will be converted to string, regardless of the original type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1594"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a051a424f7bf115ebfe54a94eb3f75793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_getTagParamW</definition>
        <argsstring>(lasso_request_t token, int paramIndex, auto_lasso_value_w_t *result)</argsstring>
        <name>lasso_getTagParamW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paramIndex</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" kindref="member">auto_lasso_value_w_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Fetches the indicated parameter that was sent to the tag. </para>        </briefdescription>
        <detaileddescription>
<para>Parameter indexes start at zero. If the parameter was specified as a keyword/value pair, the keyword will be placed in the <emphasis>name</emphasis> portion of the struct and the value in the <emphasis>data</emphasis> portion. If the parameter was provided without a keyword, the <emphasis>name</emphasis> portion of the struct will be NULL.</para><para>All parameters values will be converted to string, regardless of the original type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1608"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7b52a9d502aaaac4690f623548474add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_tagParamIsDefined</definition>
        <argsstring>(lasso_request_t token, const char *paramName)</argsstring>
        <name>lasso_tagParamIsDefined</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
<para>Returns osErrNoErr if the param WAS defined. </para>        </briefdescription>
        <detaileddescription>
<para>Any other result means it wasn&apos;t defined. Only parameters specified with a keyword should be searched for.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the keyworded parameter to search for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1618"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a33a91517e1aef9337043047a6d6ede41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_tagParamIsDefinedW</definition>
        <argsstring>(lasso_request_t token, const UChar *paramName)</argsstring>
        <name>lasso_tagParamIsDefinedW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
<para>Returns osErrNoErr if the param WAS defined. </para>        </briefdescription>
        <detaileddescription>
<para>Any other result means it wasn&apos;t defined. Only parameters specified with a keyword should be searched for.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the keyworded parameter to search for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1628"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a0ea7474101663483eb8689fbb2775db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_findTagParam</definition>
        <argsstring>(lasso_request_t token, const char *paramName, auto_lasso_value_t *result)</argsstring>
        <name>lasso_findTagParam</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter that was passed to the LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter must have been specified by keyword. The keyword will be placed in the <emphasis>name</emphasis> portion of the struct and the value in the <emphasis>data</emphasis> portion. If only a keyword was provided, the <emphasis>data</emphasis> portion will be NULL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyword of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1641"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a19ae188a20049bae5f0b7f8b90f3145e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_findTagParamW</definition>
        <argsstring>(lasso_request_t token, const UChar *paramName, auto_lasso_value_w_t *result)</argsstring>
        <name>lasso_findTagParamW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" kindref="member">auto_lasso_value_w_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter that was passed to the LCAPI tag call. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter must have been specified by keyword. The keyword will be placed in the <emphasis>name</emphasis> portion of the struct and the value in the <emphasis>data</emphasis> portion. If only a keyword was provided, the <emphasis>data</emphasis> portion will be NULL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyword of the desired parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting parameter value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1654"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a1c3e656ebd745aa10d9be65d075a1b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setVariable</definition>
        <argsstring>(lasso_request_t token, const char *named, const char *value, int index)</argsstring>
        <name>lasso_setVariable</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>named</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1656"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a102047952c57bef0d2c8067d0dde07dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL osError</type>
        <definition>LCAPICALL osError lasso_setVariableW</definition>
        <argsstring>(lasso_request_t token, const UChar *named, const UChar *value, int index)</argsstring>
        <name>lasso_setVariableW</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>named</declname>
        </param>
        <param>
          <type>const UChar *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="1657"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a9e5eaeed9d05ea99081bba0d6096ff22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL void</type>
        <definition>LCAPICALL void lasso_getPlatformSpecificPath</definition>
        <argsstring>(const char *inInternalPath, osPathname outPlatformPath)</argsstring>
        <name>lasso_getPlatformSpecificPath</name>
        <param>
          <type>const char *</type>
          <declname>inInternalPath</declname>
        </param>
        <param>
          <type>osPathname</type>
          <declname>outPlatformPath</declname>
        </param>
        <briefdescription>
<para>This function is a no-op in Lasso 9. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inInternalPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The internal pathname. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outPlatformPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting platform specific pathname. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2104"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a68b64e3738e1a45ab19bf33acd01ec98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL void</type>
        <definition>LCAPICALL void lasso_getInternalPath</definition>
        <argsstring>(const char *inPlatformPath, osPathname outInternalPath)</argsstring>
        <name>lasso_getInternalPath</name>
        <param>
          <type>const char *</type>
          <declname>inPlatformPath</declname>
        </param>
        <param>
          <type>osPathname</type>
          <declname>outInternalPath</declname>
        </param>
        <briefdescription>
<para>This function is a no-op in Lasso 9. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inPlatformPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the platform specific path name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outInternalPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting internal pathname. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2112"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a76e162ed7de5fc81ec565d2c80b98f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL void</type>
        <definition>LCAPICALL void lasso_fullyQualifyPath</definition>
        <argsstring>(lasso_request_t token, const char *inRelativePath, osPathname outFullyQualified)</argsstring>
        <name>lasso_fullyQualifyPath</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inRelativePath</declname>
        </param>
        <param>
          <type>osPathname</type>
          <declname>outFullyQualified</declname>
        </param>
        <briefdescription>
<para>This function is a no-op in Lasso 9. </para>        </briefdescription>
        <detaileddescription>
<para>If the path is already from the root it won&apos;t be changed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inRelativePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outFullyQualified</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting fully qualified path. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2124"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a2411d74791a80aa86ea957c024ba1f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL void</type>
        <definition>LCAPICALL void lasso_resolvePath</definition>
        <argsstring>(lasso_request_t token, const char *inPath, osPathname outFullPath)</argsstring>
        <name>lasso_resolvePath</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inPath</declname>
        </param>
        <param>
          <type>osPathname</type>
          <declname>outFullPath</declname>
        </param>
        <briefdescription>
<para>This function is a no-op in Lasso 9. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to resolve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outFullPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting full path. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2134"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1ab3decd3c528709dfc0fe07badb47167f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL void</type>
        <definition>LCAPICALL void lasso_resolveIncludePath</definition>
        <argsstring>(lasso_request_t token, const char *inPath, osPathname outFullPath)</argsstring>
        <name>lasso_resolveIncludePath</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inPath</declname>
        </param>
        <param>
          <type>osPathname</type>
          <declname>outFullPath</declname>
        </param>
        <briefdescription>
<para>This function is a no-op in Lasso 9. </para>        </briefdescription>
        <detaileddescription>
<para>Resulting path must name an item within the web-root or a blank string is returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to resolve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outFullPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting full path. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2146"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1afb023113e7867cbf849c626f426e1240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL void</type>
        <definition>LCAPICALL void lasso_internalToFullPlatformPath</definition>
        <argsstring>(lasso_request_t token, const char *relativeOrFullInternalPath, osPathname fullPlatformPath)</argsstring>
        <name>lasso_internalToFullPlatformPath</name>
        <param>
          <type><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member">lasso_request_t</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>relativeOrFullInternalPath</declname>
        </param>
        <param>
          <type>osPathname</type>
          <declname>fullPlatformPath</declname>
        </param>
        <briefdescription>
<para>This function is a no-op in Lasso 9. </para>        </briefdescription>
        <detaileddescription>
<para>Takes a path, such as one which may have been passed to any Lasso tag, and converts it into a full platform specific path name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The request token which should be passed to subsequent LCAPI functions for the duration of the current service function call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeOrFullInternalPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The input path to convert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fullPlatformPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting converted path. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the function succeeds, osErrNoErr is returned, otherwise, an error code indicating the problem is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2158"/>
      </memberdef>
      <memberdef kind="function" id="_lasso_c_a_p_i_8h_1a7784ee017942687a7d96a101faf09ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCAPICALL bool</type>
        <definition>LCAPICALL bool lasso_isFullInternalPath</definition>
        <argsstring>(const char *path)</argsstring>
        <name>lasso_isFullInternalPath</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns true if the path begins with a forward slash. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to test. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the given internal path is a full path from the filesystem root. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h" line="2166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LassoCAPI Main Header File. </para>    </briefdescription>
    <detaileddescription>
<para>This file contains all of the available LCAPI defines and functions. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>LassoCAPI.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>LassoC</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by<sp/>Kyle<sp/>Jessup<sp/>on<sp/>3/29/06.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>2006<sp/>LassoSoft.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#ifndef<sp/>_C_LASSOCAPI_H_</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_C_LASSOCAPI_H_</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unicode/uchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MACHINE_PC<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MACHINE_UNIX<sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MACHINE_PC<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MACHINE_UNIX<sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UCP</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UCP(X)<sp/>((const<sp/>UChar*)(L##X))</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kLPOpBegin<sp/>&quot;-opbegin&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kLPOperatorBegin<sp/>&quot;-operatorbegin&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kLPOpEnd<sp/>&quot;-opend&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kLPOperatorEnd<sp/>&quot;-operatorend&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kLPOpBeginW<sp/>LPW(L&quot;-opbegin&quot;)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kLPOperatorBeginW<sp/>LPW(L&quot;-operatorbegin&quot;)</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kLPOpEndW<sp/>LPW(L&quot;-opend&quot;)</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kLPOperatorEndW<sp/>LPW(L&quot;-operatorend&quot;)</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SortOrder<sp/>{<sp/>orderAscending,<sp/>orderDescending,<sp/>orderCustom<sp/>=<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>Operators<sp/>for<sp/>datasources</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoGreaterThan<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&gt;<sp/><sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoGreaterThanEquals<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&gt;=<sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoEquals<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;=<sp/><sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoLessThan<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&lt;<sp/><sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoLessThanEquals<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&lt;=<sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoBeginsWith<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;bgwt&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoEndsWith<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;ends&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoContains<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;cont&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNotContains<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;!cts&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNotBeginsWith<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;!bgs&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNotEndsWith<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;!end&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoAND<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;AND<sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoOR<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;OR<sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNOT<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;NOT<sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNo<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;no<sp/><sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoAny<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;any<sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoInList<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>nlt&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNotInList<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;!nlt&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoInFullText<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>ftx&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoInRegExp<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>rxp&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>kLassoNotInRegExp<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;!rxp&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>lpEncodingType<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeURL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Comment<sp/>encoding<sp/>methods<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeRaw,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeSmart,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeBreak,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeDefault,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeStrictURL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeXML,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeNone,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeHTML</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/>encodingMethod;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>encodingMethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumErrors<sp/>=<sp/>71;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>osError</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrNoErr<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrAssert<sp/>=<sp/>-10000,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stream<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrStreamReadError,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrStreamWriteError,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrMemory,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidMemoryObject,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrOutOfMemory,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrOutOfStackSpace,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotLockMemory,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotUnlockMemory,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotDisposeMemory,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generic<sp/>file<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileInvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>work<sp/>with<sp/>an<sp/>invalid<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileInvalidAccessMode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>access<sp/>a<sp/>file<sp/>in<sp/>a<sp/>mode<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotCreateOrOpenFile,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>not<sp/>create<sp/>or<sp/>open<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotCloseFile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>not<sp/>close<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotDeleteFile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>not<sp/>delete<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileNotFound,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileAlreadyExists,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>create<sp/>a<sp/>file<sp/>that<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileCorrupt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>is<sp/>corrupted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrVolumeDoesNotExist,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad<sp/>volume<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrDiskFull,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>room<sp/>left<sp/>on<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrDirectoryFull,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>more<sp/>items<sp/>allowed<sp/>inthe<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrIOError,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I/O<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidPathname,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pathname<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidFilename,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileLocked,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileUnlocked,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>is<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileIsOpen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>is<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFileIsClosed,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>is<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrBOF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>file<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrEOF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>file<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotWriteToFile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unable<sp/>to<sp/>complete<sp/>a<sp/>write<sp/>operation<sp/>to<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCouldNotReadFromFile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unable<sp/>to<sp/>complete<sp/>a<sp/>read<sp/>operation<sp/>from<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resource<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrResNotFound,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrResource,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>networking<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrNetwork,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unknown<sp/>networking<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>security<sp/>violation<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidUsername,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>username<sp/>supplied<sp/>for<sp/>the<sp/>action<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidPassword,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>password<sp/>supplied<sp/>for<sp/>the<sp/>action<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidDatabase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>database<sp/>name<sp/>supplied<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrNoPermission,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>general<sp/>permissions<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFieldRestriction,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>specified<sp/>action<sp/>is<sp/>restricted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contiguous<sp/>web<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebAddError,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebUpdateError,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebDeleteError,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>general<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrInvalidParameter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>invalid<sp/>parameter<sp/>was<sp/>passed<sp/>to<sp/>a<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrOverflow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>memory<sp/>passed<sp/>to<sp/>a<sp/>function<sp/>was<sp/>too<sp/>small<sp/>to<sp/>hold<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrNilPointer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>was<sp/>nil<sp/>when<sp/>it<sp/>shouldn&apos;t<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrUnknownError,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>when<sp/>none<sp/>of<sp/>the<sp/>cross-platform<sp/>errors<sp/>seem<sp/>to<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrLoopAborted,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>looping<sp/>tag<sp/>was<sp/>aborted;<sp/>all<sp/>looping<sp/>tags<sp/>must<sp/>catch<sp/>this<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrSyntaxError,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad<sp/>syntax<sp/>used<sp/>in<sp/>a<sp/>format<sp/>file;<sp/>parsing<sp/>of<sp/>the<sp/>file<sp/>was<sp/>aborted<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrDivideByZero,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrIllegalInstruction,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrTagNotFound,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrVarNotFound,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrAborted,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrFailure,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrPreconditionFailed,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrPostconditionFailed,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCriteriaNotMet,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrIllegalUseOfFrozenInstance,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrCompilationError,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrNotImplemented,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrSyntaxWarning,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>All<sp/>errors<sp/>that<sp/>aren&apos;t<sp/>contiguous<sp/>with<sp/>the<sp/>above<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>added<sp/>below.<sp/><sp/>Also,<sp/>any<sp/>new<sp/>error<sp/>messages<sp/>in<sp/>the<sp/>continguous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>should<sp/>be<sp/>added<sp/>between<sp/>osErrAssert<sp/>and<sp/>osErrUnknownError.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non<sp/>contiguous<sp/>web<sp/>errors<sp/>(backwards<sp/>compatible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebRequiredFieldMissing<sp/><sp/>=<sp/>-800,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>missing<sp/>for<sp/>required<sp/>field<sp/>for<sp/>Add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebRepeatingRelatedField<sp/>=<sp/>-801,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>repeating<sp/>related<sp/>fields<sp/>isn&apos;t<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebNoSuchObject<sp/>=<sp/>-1728,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>error<sp/>number<sp/>as<sp/>errAENoSuchObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebTimeout<sp/>=<sp/>-1712,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>error<sp/>number<sp/>as<sp/>errAETimeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebActionNotSupported<sp/>=<sp/>-802,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrConnectionInvalid<sp/>=<sp/>-609,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>error<sp/>number<sp/>as<sp/>connectionInvalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrWebModuleNotFound<sp/>=<sp/>-2000,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrHTTPFileNotFound<sp/>=<sp/>404,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>osErrDatasourceError<sp/>=<sp/>-3000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>third-party<sp/>generic<sp/>datasource<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!MACHINE_LINUX</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>FD_SETSIZE</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>FD_SETSIZE</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FD_SETSIZE<sp/>128</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LPW(X)<sp/>((const<sp/>UChar*)X)</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LP_TypeDesc;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">LPTypes</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeString<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;TEXT&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeNull<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;null&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeInteger<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;long&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeBoolean<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;bool&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeBytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;blob&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeDecimal<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;doub&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeDateTime<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeArray<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;arry&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeTag<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypePair<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;pair&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>lpTypeCustom<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Yers&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>kDateDataType<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>kProtectionNone<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LP_TypeDesc<sp/>kProtectionReadOnly<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;nmod&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">LPTypes;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPORT_LCAPI<sp/></highlight><highlight class="comment">/*<sp/>external<sp/>modules<sp/>don&apos;t<sp/>define<sp/>anything<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LCAPICALL<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LCAPICALL<sp/>__declspec(dllimport)</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPORT_LCAPI<sp/></highlight><highlight class="comment">/*<sp/>external<sp/>modules<sp/>don&apos;t<sp/>define<sp/>anything<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LCAPICALL<sp/>//<sp/>automatically<sp/>all<sp/>exported</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LCAPICALL<sp/>extern</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCAPI_DEPRECATED</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="256" refid="_lasso_c_a_p_i_8h_1affe94ada55f4a0ff134903ea173f124b" refkind="member"><highlight class="preprocessor">#define<sp/>LCAPI_VERSION<sp/>9<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="_lasso_c_a_p_i_8h_1a404173991698669c498fc3d366ef6476" refkind="member"><highlight class="preprocessor">#define<sp/>LCAPI_VERSION_1<sp/>1<sp/></highlight></codeline>
<codeline lineno="258" refid="_lasso_c_a_p_i_8h_1acc5c746eea178907a94442c6d16c5f03" refkind="member"><highlight class="preprocessor">#define<sp/>LCAPI_VERSION_2<sp/>2<sp/></highlight></codeline>
<codeline lineno="259" refid="_lasso_c_a_p_i_8h_1ab07c83c20bb35b4676278c3f3da93b24" refkind="member"><highlight class="preprocessor">#define<sp/>LCAPI_VERSION_3<sp/>3<sp/></highlight></codeline>
<codeline lineno="260" refid="_lasso_c_a_p_i_8h_1a87d049115b0d117f7c817da666d0c32b" refkind="member"><highlight class="preprocessor">#define<sp/>LCAPI_VERSION_4<sp/>4<sp/></highlight></codeline>
<codeline lineno="261" refid="_lasso_c_a_p_i_8h_1a2f216da4070d57872991f1aaa51b6d6b" refkind="member"><highlight class="preprocessor">#define<sp/>LCAPI_VERSION_9<sp/>LCAPI_VERSION<sp/></highlight></codeline>
<codeline lineno="281" refid="structlasso__value__t" refkind="compound"><highlight class="preprocessor">struct<sp/>lasso_value_t</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288" refid="structlasso__value__t_1a7cff314daf11088d4ad53f33993c80bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structlasso__value__t_1a7cff314daf11088d4ad53f33993c80bf" kindref="member" tooltip="The name portion.">name</ref>;</highlight></codeline>
<codeline lineno="294" refid="structlasso__value__t_1ac93ae7c6b4242355a0ea75e90f30aad2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlasso__value__t_1ac93ae7c6b4242355a0ea75e90f30aad2" kindref="member" tooltip="The size of the name member, in bytes.">nameSize</ref>;</highlight></codeline>
<codeline lineno="300" refid="structlasso__value__t_1a56756016409de8a7db604234c8c3b20f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structlasso__value__t_1a56756016409de8a7db604234c8c3b20f" kindref="member" tooltip="The value portion.">data</ref>;</highlight></codeline>
<codeline lineno="306" refid="structlasso__value__t_1aed9ddd12633ffb83e82ea438a159331f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlasso__value__t_1aed9ddd12633ffb83e82ea438a159331f" kindref="member" tooltip="The size of the data member, in bytes.">dataSize</ref>;</highlight></codeline>
<codeline lineno="312" refid="structlasso__value__t_1a684c4c9ba2428ab7fb72df134b212ef7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LP_TypeDesc<sp/><ref refid="structlasso__value__t_1a684c4c9ba2428ab7fb72df134b212ef7" kindref="member" tooltip="The type code for the data member.">type</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="structlasso__value__w__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlasso__value__w__t" kindref="compound" tooltip="Used for retrieving Unicode character data from some LCAPI functions.">lasso_value_w_t</ref></highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337" refid="structlasso__value__w__t_1a3bc9995914271ebee64a97c0aa73f3fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/><ref refid="structlasso__value__w__t_1a3bc9995914271ebee64a97c0aa73f3fe" kindref="member" tooltip="The name portion.">name</ref>;</highlight></codeline>
<codeline lineno="343" refid="structlasso__value__w__t_1ab393f4171fcf368253941101b95b8c53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlasso__value__w__t_1ab393f4171fcf368253941101b95b8c53" kindref="member" tooltip="The size of the name member, in bytes.">nameSize</ref>;</highlight></codeline>
<codeline lineno="349" refid="structlasso__value__w__t_1a93b548c4f28e8ce9dd0d2634cd2e7fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/><ref refid="structlasso__value__w__t_1a93b548c4f28e8ce9dd0d2634cd2e7fea" kindref="member" tooltip="The value portion.">data</ref>;</highlight></codeline>
<codeline lineno="355" refid="structlasso__value__w__t_1a8d992b613330e2e991a154ebf594270c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlasso__value__w__t_1a8d992b613330e2e991a154ebf594270c" kindref="member" tooltip="The size of the data member, in bytes.">dataSize</ref>;</highlight></codeline>
<codeline lineno="361" refid="structlasso__value__w__t_1a5f77c2e5c1c8afa6c0a2c443bdccaa9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LP_TypeDesc<sp/><ref refid="structlasso__value__w__t_1a5f77c2e5c1c8afa6c0a2c443bdccaa9f" kindref="member" tooltip="The type code for the data member.">type</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">};</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="_lasso_c_a_p_i_8h_1a213f323c69368ef11dcb2d5c87ee0cbc" refkind="member"><highlight class="preprocessor">#define<sp/>INITVAL(X)<sp/>{<sp/>(X)-&gt;name<sp/>=<sp/>(X)-&gt;data<sp/>=<sp/>NULL;<sp/>(X)-&gt;nameSize<sp/>=<sp/>(X)-&gt;dataSize<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="380" refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structlasso__value__t" kindref="compound" tooltip="Used for retrieving data from some LCAPI functions.">lasso_value_t</ref><sp/><ref refid="_lasso_c_a_p_i_8h_1a10a40fed1ba626e7c1bcef31b73533de" kindref="member">auto_lasso_value_t</ref>;</highlight></codeline>
<codeline lineno="384" refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structlasso__value__w__t" kindref="compound" tooltip="Used for retrieving Unicode character data from some LCAPI functions.">lasso_value_w_t</ref><sp/><ref refid="_lasso_c_a_p_i_8h_1af8698240af33685c7329df98900965a4" kindref="member">auto_lasso_value_w_t</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af30bb94cc1926d128408e453dfe8ff48" kindref="member" tooltip="Allocates a lasso_value_t with the indicated data.">lasso_allocValue</ref>(<sp/><ref refid="structlasso__value__t" kindref="compound" tooltip="Used for retrieving data from some LCAPI functions.">lasso_value_t</ref><sp/>*<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nameSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize,<sp/>LP_TypeDesc<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aeca745b3901ea3ffdca5dd51525fb26b" kindref="member" tooltip="Allocates a lasso_value_w_t with the indicated data.">lasso_allocValueW</ref>(<sp/><ref refid="structlasso__value__w__t" kindref="compound" tooltip="Used for retrieving Unicode character data from some LCAPI functions.">lasso_value_w_t</ref><sp/>*<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nameSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize,<sp/>LP_TypeDesc<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a5575a7f410475bf53025ace6ffd35105" kindref="member" tooltip="Allocates a lasso_value_t with the indicated data and encoding method.">lasso_allocValueConv</ref>(<sp/><ref refid="structlasso__value__t" kindref="compound" tooltip="Used for retrieving data from some LCAPI functions.">lasso_value_t</ref><sp/>*<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nameSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>nameEncoding,<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>dataEncoding,<sp/>LP_TypeDesc<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a8e15163d623e05abeaa88bb0ae60ca49" kindref="member" tooltip="Frees a previously allocated lasso_value_t.">lasso_freeValue</ref>(<sp/><ref refid="structlasso__value__t" kindref="compound" tooltip="Used for retrieving data from some LCAPI functions.">lasso_value_t</ref><sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ab92c99ce396a91d8774d7d2d5bfb69c0" kindref="member" tooltip="Frees a previously allocated lasso_value_w_t.">lasso_freeValueW</ref>(<sp/><ref refid="structlasso__value__w__t" kindref="compound" tooltip="Used for retrieving Unicode character data from some LCAPI functions.">lasso_value_w_t</ref><sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/>DATASOURCE<sp/>ACTIONS</highlight></codeline>
<codeline lineno="458"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="464" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7c" kindref="member" tooltip="Types of actions datasources could be called for.">datasource_action_t</ref></highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca229f8ea3fb6e5cee1b39fb1c63c294cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca229f8ea3fb6e5cee1b39fb1c63c294cb" kindref="member">datasourceInit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cacd8961329d6e31729f5a5b45cb7800eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cacd8961329d6e31729f5a5b45cb7800eb" kindref="member">datasourceTerm</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>datasourceExists,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UNUSED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca6c0c4c97dfb73dd43a08d760952a4a0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca6c0c4c97dfb73dd43a08d760952a4a0a" kindref="member">datasourceNames</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caed40e6bf68753e0bd62d08da86a5b172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caed40e6bf68753e0bd62d08da86a5b172" kindref="member">datasourceTableNames</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cae883846b7bf5b1b6145d1134c8d4bdbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cae883846b7bf5b1b6145d1134c8d4bdbd" kindref="member">datasourceSearch</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca6655486e7c643eba5dbc7a615dfe69a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca6655486e7c643eba5dbc7a615dfe69a0" kindref="member">datasourceAdd</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca39fc1bf2ee94acab00e8e00b1a0efbd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca39fc1bf2ee94acab00e8e00b1a0efbd7" kindref="member">datasourceUpdate</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca3aa05625a99339103f59f89385412642" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca3aa05625a99339103f59f89385412642" kindref="member">datasourceDelete</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cab9a326f3273f9b9c15115cc0e671758a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7cab9a326f3273f9b9c15115cc0e671758a" kindref="member">datasourceInfo</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca3690ff7c20b4ee8aebba2f4948a06c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca3690ff7c20b4ee8aebba2f4948a06c3f" kindref="member">datasourceExecSQL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="484" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca0566ec7827223f579ef604451bfa7879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca0566ec7827223f579ef604451bfa7879" kindref="member">datasourceRandom</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca34159e621460a6a922c8f56a659d93c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca34159e621460a6a922c8f56a659d93c5" kindref="member">datasourceSchemaNames</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="493" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca73adb6143988bcb5271534ad96e7ff7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca73adb6143988bcb5271534ad96e7ff7b" kindref="member">datasourceCloseConnection</ref>,<sp/></highlight></codeline>
<codeline lineno="496" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca1f5aa19550c1566751e2b6bd45be68fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca1f5aa19550c1566751e2b6bd45be68fb" kindref="member">datasourceTickle</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>datasourceDuplicate,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FileMaker<sp/>module<sp/>ONLY<sp/>impliments<sp/>this<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>datasourceScripts,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FileMaker<sp/>module<sp/>ONLY<sp/>impliments<sp/>this<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>datasourceImage,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FileMaker<sp/>module<sp/>ONLY<sp/>impliments<sp/>this<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca16cadb9605a03b9086e052fe5b93850d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca16cadb9605a03b9086e052fe5b93850d" kindref="member">datasourceFindAll</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caeb69ae07df38d872d4b3c8ac542b8bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7caeb69ae07df38d872d4b3c8ac542b8bb8" kindref="member">datasourceMatchesName</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="513" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca2ceba05b9b083baa6e80341988279591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca2ceba05b9b083baa6e80341988279591" kindref="member">datasourcePrepareSQL</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517" refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca87a96d532d9710dccd01ae8d21796416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7ca87a96d532d9710dccd01ae8d21796416" kindref="member">datasourceUnprepareSQL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>datasourceMAXIMUM,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>datasourceNothing<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="522"><highlight class="normal">};</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_MATCHED_NAME(param)<sp/>{<sp/>const_cast&lt;auto_lasso_value_t*&gt;(param)-&gt;dataSize<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/>TAG<sp/>ACTIONS</highlight></codeline>
<codeline lineno="528"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="534" refid="_lasso_c_a_p_i_8h_1a4255b3d65589fa8026bf517ccdc6eee3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a4255b3d65589fa8026bf517ccdc6eee3" kindref="member" tooltip="Types of actions tag modules could be called for.">tag_action_t</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/><sp/>LASSO<sp/>REQUEST<sp/>TOKEN/DATASOURCE<sp/>TOKEN</highlight></codeline>
<codeline lineno="538"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="544" refid="structlasso__request__t__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t_</ref>{}<sp/>*<sp/><ref refid="_lasso_c_a_p_i_8h_1a69b40823f501908a1ef7a25f481fc2e7" kindref="member" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/>LASSO<sp/>TYPE<sp/>TOKEN<sp/>-<sp/>LCAPI<sp/>6</highlight></codeline>
<codeline lineno="548"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="554" refid="structlasso__type__t__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t_</ref>{}<sp/>*<sp/><ref refid="_lasso_c_a_p_i_8h_1a7f0dd7e130801d034db793d0241a9c5e" kindref="member" tooltip="Represents a type within Lasso.">lasso_type_t</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/>DATASOURCE<sp/>CONNECTION<sp/>TOKEN<sp/>-<sp/>LCAPI<sp/>7</highlight></codeline>
<codeline lineno="558"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="567" refid="structlasso__dsconnection__t__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlasso__dsconnection__t__" kindref="compound" tooltip="Represents a datasource module connection.">lasso_dsconnection_t_</ref>{}<sp/>*<sp/><ref refid="_lasso_c_a_p_i_8h_1a21d10c8c1936424c035994a8e878ac0d" kindref="member" tooltip="Represents a datasource module connection.">lasso_dsconnection_t</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/>MODULE<sp/>SERVICE<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="571"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="583" refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>osError<sp/>(*<ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member" tooltip="Service function for Lasso Datasource modules.">lasso_ds_func</ref>)(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="_lasso_c_a_p_i_8h_1a1173b3d13261c94a3f4f5b7b75090e7c" kindref="member" tooltip="Types of actions datasources could be called for.">datasource_action_t</ref><sp/>action,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>auto_lasso_value_t<sp/>*<sp/>param);</highlight></codeline>
<codeline lineno="594" refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>osError<sp/>(*<ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref>)(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>tag_action_t<sp/>action);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/>MODULE<sp/>REGISTRATION</highlight></codeline>
<codeline lineno="598"><highlight class="comment">**********************************************************/</highlight></codeline>
<codeline lineno="607" refid="_lasso_c_a_p_i_8h_1adbbe9a0b0a3c54d20dce932c3a61427a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_lasso_c_a_p_i_8h_1adbbe9a0b0a3c54d20dce932c3a61427a" kindref="member" tooltip="LCAPI module registration callback.">register_module_func</ref>)(void);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="_lasso_c_a_p_i_8h_1afd88c2880e0cec87a2b4b62cb3be5a0d" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1afd88c2880e0cec87a2b4b62cb3be5a0d" kindref="member" tooltip="The tag is to be treated as an initializer for a custom type.">flag_typeInitializer</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000001;<sp/></highlight></codeline>
<codeline lineno="616" refid="_lasso_c_a_p_i_8h_1a4a194df614267a9b2e3f976f38a7980a" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a4a194df614267a9b2e3f976f38a7980a" kindref="member" tooltip="The tag is to be treated as a &amp;quot;regular&amp;quot; tag.">flag_typeSubstitutionTag</ref><sp/>=<sp/><sp/><sp/><sp/>0x00000002;<sp/></highlight></codeline>
<codeline lineno="620" refid="_lasso_c_a_p_i_8h_1a0f5984f9d6e966834a66629a7a18c4da" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a0f5984f9d6e966834a66629a7a18c4da" kindref="member" tooltip="The tag is to be run in its own thread.">flag_typeAsync</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000004;<sp/></highlight></codeline>
<codeline lineno="624" refid="_lasso_c_a_p_i_8h_1a8dffbc16425d74d451655e516611d1a7" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a8dffbc16425d74d451655e516611d1a7" kindref="member" tooltip="The tag is a container tag.">flag_typeContainerTag</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000008;<sp/></highlight></codeline>
<codeline lineno="629" refid="_lasso_c_a_p_i_8h_1af72a5f6dcfae67bd446c3bf59f247221" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1af72a5f6dcfae67bd446c3bf59f247221" kindref="member" tooltip="Used internally.">flag_typeInterstitial</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000010;<sp/></highlight></codeline>
<codeline lineno="630" refid="_lasso_c_a_p_i_8h_1ac66a11c6d130a0d1001f6b0ae8b3428d" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1ac66a11c6d130a0d1001f6b0ae8b3428d" kindref="member" tooltip="Bypass any security checks for the tag.">flag_typeSkipSecurityCheck</ref><sp/>=<sp/><sp/>0x00000040;<sp/></highlight></codeline>
<codeline lineno="635" refid="_lasso_c_a_p_i_8h_1ad8f96b9bad9109c5131d66d4107c6e07" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1ad8f96b9bad9109c5131d66d4107c6e07" kindref="member" tooltip="Used internally.">flag_INTERNALONLY</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000080;<sp/></highlight></codeline>
<codeline lineno="636" refid="_lasso_c_a_p_i_8h_1a9323b05e82307d88bc3f1b37647cf386" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a9323b05e82307d88bc3f1b37647cf386" kindref="member" tooltip="The tag is a looping container tag.">flag_typeLoopingTag</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000100;<sp/></highlight></codeline>
<codeline lineno="641" refid="_lasso_c_a_p_i_8h_1a5736c275c7fc84997995d3b9ecedd326" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a5736c275c7fc84997995d3b9ecedd326" kindref="member" tooltip="Used internally. Not useful for LCAPI tag types.">flag_typeEval</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000200;<sp/></highlight></codeline>
<codeline lineno="642" refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member" tooltip="The tag should not be automatically imported into the global namespace.">flag_noGlobalImport</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000400;<sp/></highlight></codeline>
<codeline lineno="646" refid="_lasso_c_a_p_i_8h_1ad820bf9958847850c14c1b428a9e69ce" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1ad820bf9958847850c14c1b428a9e69ce" kindref="member" tooltip="Used internally.">flag_INTERNALONLY2</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000800;<sp/></highlight></codeline>
<codeline lineno="647" refid="_lasso_c_a_p_i_8h_1afe844e24fdb0f6c87af8f52b36b92065" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1afe844e24fdb0f6c87af8f52b36b92065" kindref="member" tooltip="Use of the tag is deprecated.">flag_deprecated</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00001000;<sp/></highlight></codeline>
<codeline lineno="652" refid="_lasso_c_a_p_i_8h_1a3316993049398d4a1462e88ebb89e5cc" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a3316993049398d4a1462e88ebb89e5cc" kindref="member" tooltip="Never apply default HTML encoding to the tag&amp;#39;s return value.">flag_noDefaultEncoding</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/>0x00002000;<sp/></highlight></codeline>
<codeline lineno="653"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_INTERNALONLY3<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00004000;</highlight></codeline>
<codeline lineno="654" refid="_lasso_c_a_p_i_8h_1a4884d39f1323537e3e694ba046962bc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a4884d39f1323537e3e694ba046962bc2" kindref="member" tooltip="Applies only to types registered with lasso_registerTypeModule.">flag_prototype</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00008000;<sp/></highlight></codeline>
<codeline lineno="659"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_atomic<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010000;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_private<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020000;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_nonBlockingCAPI<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00040000;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>set,<sp/>the<sp/>capi<sp/>call<sp/>is<sp/>run<sp/>in<sp/>its<sp/>own<sp/>thread<sp/>to<sp/>avoid<sp/>blocking<sp/>the<sp/>physical<sp/>host<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>NOTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>flag<sp/>above<sp/>matches<sp/>FLAG_RESERVED3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//<sp/>feel<sp/>free<sp/>to<sp/>use<sp/>these<sp/>flags<sp/>with<sp/>lasso_typeXXXFlag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="_lasso_c_a_p_i_8h_1a2940640b8e40f245ef2df39ce7101c00" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a2940640b8e40f245ef2df39ce7101c00" kindref="member" tooltip="User defined flag.">flag_User1</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01000000;<sp/></highlight></codeline>
<codeline lineno="673" refid="_lasso_c_a_p_i_8h_1a8f98e576943f195677ae1d7ed4d61790" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a8f98e576943f195677ae1d7ed4d61790" kindref="member" tooltip="User defined flag.">flag_User2</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02000000;<sp/></highlight></codeline>
<codeline lineno="678" refid="_lasso_c_a_p_i_8h_1a04c5eaff81adf0ccd1a79b59fbfa8742" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a04c5eaff81adf0ccd1a79b59fbfa8742" kindref="member" tooltip="User defined flag.">flag_User3</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03000000;<sp/></highlight></codeline>
<codeline lineno="683" refid="_lasso_c_a_p_i_8h_1a3e302d63221b7cb15ceba9b01ca7c55d" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a3e302d63221b7cb15ceba9b01ca7c55d" kindref="member" tooltip="User defined flag.">flag_User4</ref><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04000000;<sp/></highlight></codeline>
<codeline lineno="693" refid="_lasso_c_a_p_i_8h_1a135e250abe3d765277878039f786e8c1" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a135e250abe3d765277878039f786e8c1" kindref="member" tooltip="Recommended default registration flags.">REG_FLAGS_TAG_DEFAULT</ref><sp/>=<sp/>(flag_typeSubstitutionTag<sp/>|<sp/><ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member" tooltip="The tag should not be automatically imported into the global namespace.">flag_noGlobalImport</ref>);</highlight></codeline>
<codeline lineno="699" refid="_lasso_c_a_p_i_8h_1a895178fac31b60b6483e938bc67bd18b" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a895178fac31b60b6483e938bc67bd18b" kindref="member" tooltip="Recommended default registration flags.">REG_FLAGS_CONTAINER_DEFAULT</ref><sp/>=<sp/>(flag_typeContainerTag<sp/>|<sp/><ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member" tooltip="The tag should not be automatically imported into the global namespace.">flag_noGlobalImport</ref>);</highlight></codeline>
<codeline lineno="705" refid="_lasso_c_a_p_i_8h_1a1ea037f0de6b4d69755f659b0cae2e61" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a1ea037f0de6b4d69755f659b0cae2e61" kindref="member" tooltip="Recommended default registration flags.">REG_FLAGS_LOOPING_DEFAULT</ref><sp/>=<sp/>(flag_typeLoopingTag<sp/>|<sp/><ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member" tooltip="The tag should not be automatically imported into the global namespace.">flag_noGlobalImport</ref>);</highlight></codeline>
<codeline lineno="711" refid="_lasso_c_a_p_i_8h_1ab0957efe2df707af5e7d98ded8e0d2c0" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1ab0957efe2df707af5e7d98ded8e0d2c0" kindref="member" tooltip="Recommended default registration flags.">REG_FLAGS_TYPE_DEFAULT</ref><sp/>=<sp/>(flag_typeInitializer<sp/>|<sp/><ref refid="_lasso_c_a_p_i_8h_1ad9e245dfcd2d5acc825e71b33889e91c" kindref="member" tooltip="The tag should not be automatically imported into the global namespace.">flag_noGlobalImport</ref>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af44407d002bb7de1e7966b928be15bfb" kindref="member">lasso_registerTagModule</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>namespaceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>tagName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>description<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_registerTagModuleW(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>namespaceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>tagName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>description<sp/>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a7b3d865b925e1dba86adf0a784ff8c42" kindref="member">lasso_registerTypeModule</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>namespaceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>tagName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>description,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>superType<sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_registerTypeModuleW(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>namespaceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>tagName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>description,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>superType<sp/>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1afdae48eed519b5d89c5e0715f3dfd232" kindref="member">lasso_registerDSModule</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>moduleName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member" tooltip="Service function for Lasso Datasource modules.">lasso_ds_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_registerDSModuleW(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>moduleName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member" tooltip="Service function for Lasso Datasource modules.">lasso_ds_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_registerDSModule2(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>moduleName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member" tooltip="Service function for Lasso Datasource modules.">lasso_ds_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>userData,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*userDataDtor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="754"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_registerDSModule2W(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>moduleName,<sp/><ref refid="_lasso_c_a_p_i_8h_1a177a7e18cb00eba114086a13b9ceaf8b" kindref="member" tooltip="Service function for Lasso Datasource modules.">lasso_ds_func</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>userData,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*userDataDtor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_typeGetTrait(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>from,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>into<sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a8f0abc876c38cd6c5e9e08db1b504159" kindref="member">lasso_setResultMessage</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a5117e05de3f91f01e26faaa74b083b72" kindref="member">lasso_setResultMessageW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a3cd85e3035b173f327fdd0661e2baafd" kindref="member" tooltip="Allocates a new type instance.">lasso_typeAlloc</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>typeName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paramCount,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>paramsArray,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outType<sp/>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a99d34189b7274fb7702a1ceaeed5c3f0" kindref="member" tooltip="Allocates a new type instance.">lasso_typeAllocW</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>typeName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paramCount,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>paramsArray,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outType<sp/>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a703ba3822cc42411ab2c579915709dd3" kindref="member" tooltip="Allocates a custom type within a type initializer.">lasso_typeAllocCustom</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outCustom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a8a2d303b5fac1fb50fecf250b9ee72dd" kindref="member" tooltip="Allocates a custom type within a type initializer.">lasso_typeAllocCustomW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outCustom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aa4fae819ca35ceaba1eed693d17c89a9" kindref="member" tooltip="Allocate a new type instance based on the given type instance.">lasso_typeAllocFromProto</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>proto,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aa4344b64054f539a5fec2bca6797941c" kindref="member">lasso_typeAllocNull</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outNull<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a8cc7acf6b8f25d12846af115e91d16b9" kindref="member">lasso_typeAllocString</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outString,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a3f09b6ec7ed6d7f901dfe76d0bba1a9c" kindref="member">lasso_typeAllocStringConv</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outString,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>conv<sp/>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1abd3468ac7077fc65f51eaf408d745169" kindref="member">lasso_typeAllocStringW</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outString,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_typeAppendStringW(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a8d57924dcc160bb08045d7c0ae80fcba" kindref="member">lasso_typeAllocInteger</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outInteger,<sp/>int64_t<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4d3870b34c40b9f9455c1663ec643e5d" kindref="member">lasso_typeAllocDecimal</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outDecimal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4d0247f10281f5d36fe3b1fb91d2fb74" kindref="member">lasso_typeAllocDecimal2</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outDecimal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a402f0149c72bf960bfd03589f69488db" kindref="member">lasso_typeAllocPair</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outPair,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>first,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>second<sp/>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a9f89451fdd9853d205c313aac8489814" kindref="member">lasso_typeAllocReference</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outRef,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>referenced<sp/>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a04d0d96413e3a32f5096d904fecc9c1f" kindref="member">lasso_typeAllocTag</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outTag,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>nativeTagFunction<sp/>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aef44427e96746ceba8aaa1f7ac630539" kindref="member">lasso_typeAllocTagFromSource</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outTag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4170d1609d09609301ae202b5f8fd3a8" kindref="member">lasso_typeAllocArray</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outArray,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>elements<sp/>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1abad01e5ec216291d309fe5dc9ddb38b6" kindref="member">lasso_typeAllocBoolean</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>outBool,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inValue<sp/>);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a1ed3b543b3ab88e1cb2400f764f1de03" kindref="member">lasso_typeGetString</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/>auto_lasso_value_t<sp/>*<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a94ec13a88c79b8214f941d03758d6a6a" kindref="member">lasso_typeGetStringConv</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/>auto_lasso_value_t<sp/>*<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>conv<sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a41f21228be7e4b4aa2fcb200ae1bacdb" kindref="member">lasso_typeGetStringW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/>auto_lasso_value_w_t<sp/>*<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a0ddc97b5133dc869d690992093c461be" kindref="member">lasso_typeGetInteger</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/>int64_t<sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4a18b9f2314ebbdadc523db2c260762e" kindref="member">lasso_typeGetDecimal</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a6ffe81fa1dd2f76ed40e8873220dd590" kindref="member">lasso_typeGetBoolean</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aff379f604683f4f46471d247d96c0cda" kindref="member">lasso_typeSetString</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a3b22cc6173dcc3442611799c33c0d102" kindref="member">lasso_typeSetStringW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a32d0a722c031158171c4c5d16df4dc3c" kindref="member">lasso_arrayGetSize</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a107654dc36d267e3cbbb4dd87b00c81d" kindref="member">lasso_arrayGetElement</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af56583b5dfcb6f48218d5af62c689b8e" kindref="member">lasso_arraySetElement</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>elem<sp/>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4d91c7457777802d7b93297880e6d351" kindref="member">lasso_pairGetFirst</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>pr,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1abdbe7518b4730feac6c146a95eeb3cab" kindref="member">lasso_pairGetSecond</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>pr,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a30d3e29f08154eece7e0a0ff0376e051" kindref="member">lasso_pairSetFirst</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>pr,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>frst<sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ac957e8c797df44b67f01f90edf7c8d5a" kindref="member">lasso_pairSetSecond</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>pr,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>scnd<sp/>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ab04eba658a5c5ab9031f722b4c471d93" kindref="member" tooltip="Adds a member to a type instance.">lasso_typeAddMember</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>member<sp/>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a928e2ff7121f93a539b49160642e53d6" kindref="member" tooltip="Adds a member to a type instance.">lasso_typeAddMemberW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>member<sp/>);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af63ba8e23d0dff4810767d5873c9e31f" kindref="member" tooltip="Adds a tag member to a type instance.">lasso_typeAddTagMember</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>member<sp/>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a6980b2e1b86637a9ceae84d1ea852f1d" kindref="member" tooltip="Adds a tag member to a type instance.">lasso_typeAddTagMember2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>named,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>nativeTagFunction<sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ab75c18247d7de9cd8e14fcdf2aad4f48" kindref="member" tooltip="Adds a data member to a type instance.">lasso_typeAddDataMember</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>member<sp/>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ac8fd31e332551ee3116f93730ccd2f20" kindref="member" tooltip="Adds a tag member to a type instance.">lasso_typeAddTagMemberW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>member<sp/>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a493d1a2f0ab6b2e4170ba812bd782845" kindref="member" tooltip="Adds a tag member to a type instance.">lasso_typeAddTagMember2W</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/><ref refid="_lasso_c_a_p_i_8h_1a0062fb974d5447157a1eeda6f37d4df0" kindref="member" tooltip="Service function for a Lasso tag.">lasso_tag_func</ref><sp/>nativeTagFunction<sp/>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aec6626fae305ff65fc73cfc94673e7e8" kindref="member" tooltip="Adds a data member to a type instance.">lasso_typeAddDataMemberW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>member<sp/>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a53451f170615b86f63d099fa5acefa5e" kindref="member" tooltip="Retrieves a data member from a type instance.">lasso_typeGetDataMember</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4066d088914a54cc16d47a98be004807" kindref="member" tooltip="Retrieves a data member from a type instance.">lasso_typeGetDataMemberW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a6146286dc704a30f2e685fd919519cd3" kindref="member" tooltip="Allows storage of an opaque pointer value.">lasso_setPtrMember</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dtor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a319477e3f225d33a60d329d9721df4b4" kindref="member" tooltip="Allows storage of an opaque pointer value.">lasso_setPtrMember2</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dtor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>obj),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>(*copyFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>obj));</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ab95de1d4e36e5a1b202f24020ce6c250" kindref="member" tooltip="Allows storage of an opaque pointer value.">lasso_setPtrMemberW</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*dtor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1afdcc165bb2b339c862f42f6c4502c13b" kindref="member" tooltip="Allows storage of an opaque pointer value.">lasso_setPtrMember2W</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dtor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>obj),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>(*copyFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>obj));</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af20c9fa4eb0d25c5e35d9c8f11e9b08f" kindref="member" tooltip="Retrieves a previously added pointer value.">lasso_getPtrMember</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>data);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aa34b3b48a9d417fd5db0fbd55f901f6a" kindref="member" tooltip="Retrieves a previously added pointer value.">lasso_getPtrMemberW</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>data);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ad472d1e8cdc43876a1877a5a5f828682" kindref="member" tooltip="Returns the type instance that the current tag call was a member of.">lasso_getTagSelf</ref><sp/>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a25610de5c5eb7c89448d99ed227b16a9" kindref="member" tooltip="Returns the name of the target type.">lasso_typeGetName</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>target,<sp/>auto_lasso_value_t<sp/>*<sp/>outName<sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a1d1ef7f682de82f02b384d9ad867c0dc" kindref="member" tooltip="Returns the name of the target type.">lasso_typeGetNameW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>target,<sp/>auto_lasso_value_w_t<sp/>*<sp/>outName<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1afb32edeb9f7f76f6905c67b1c4a81a47" kindref="member" tooltip="Tests to see if a type is an instance of another type.">lasso_typeIsA</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>target,<sp/>LP_TypeDesc<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a02e3ffdf383708291b8478490045aa91" kindref="member" tooltip="Tests to see if a type is an instance of another type.">lasso_typeIsA2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>typeName<sp/>);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1abcb623bcae6aa1fc1c3e36271bacb1b6" kindref="member" tooltip="Tests to see if a type is an instance of another type.">lasso_typeIsA2W</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>typeName<sp/>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a2ac2a45968279f970759a44d78d16aee" kindref="member" tooltip="Tests to see if a type is an instance of another type.">lasso_typeIsA3</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>target,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>type<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a3c3fc793f0867a788670ad5943e00ca6" kindref="member" tooltip="Specifies the return value of the current LCAPI tag call.">lasso_returnTagValue</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a74d6cf3311d7f6382be65c1ba2ce3117" kindref="member" tooltip="Return a boolean value from the current LCAPI tag call.">lasso_returnTagValueBoolean</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ad079e626412cf0629a98597cb4bf063d" kindref="member" tooltip="Return an integer value from the current LCAPI tag call.">lasso_returnTagValueInteger</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>int64_t<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a1e5bddb270e8d68c0f0d83f243c7d045" kindref="member" tooltip="Return a string value from the current LCAPI tag call.">lasso_returnTagValueString</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a2b416ac10e54baebd22f4be2b09421cc" kindref="member" tooltip="Return a string value from the current LCAPI tag call.">lasso_returnTagValueStringW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1afda8633f2ad8bc822845dea03385d23c" kindref="member" tooltip="Return a decimal value from the current LCAPI tag call.">lasso_returnTagValueDecimal</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a6eeb1b093f871081dc07cd1d94296e73" kindref="member" tooltip="Return binary data from the current LCAPI tag call.">lasso_returnTagValueBytes</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a5c364416a3624ef69fa3437bb86305c5" kindref="member" tooltip="Retrieves a parameter that was passed to the LCAPI tag call.">lasso_getTagParam2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paramIndex,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ac2f574e99cc556df7903f1d1a16a661d" kindref="member" tooltip="Retrieves a parameter that was passed to the LCAPI tag call.">lasso_findTagParam2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>paramName,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a445c3d089975f31d02081ce6cf6f48d1" kindref="member" tooltip="Retrieves a parameter that was passed to the LCAPI tag call.">lasso_findTagParam2W</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>paramName,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a599f66e3caa848e20d0dcce1ba0392c6" kindref="member" tooltip="Register a constant value.">lasso_registerConstant2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>namespaceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>val<sp/>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ab5b3d6b8825fa74d9fc5b1f69aecce84" kindref="member" tooltip="Register a constant value.">lasso_registerConstant2W</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>namespaceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>val<sp/>);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a12803501a95643f6ac3674c9b020b63f" kindref="member" tooltip="Register a constant value.">lasso_registerConstant</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>val<sp/>);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a5afd10e7d735e732bb149e75843e095e" kindref="member" tooltip="Register a constant value.">lasso_registerConstantW</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>val<sp/>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4aebcb915ae1d73f63eee3b1b3105e79" kindref="member" tooltip="Fetches the name of the tag that triggered this call.">lasso_getTagName</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>result);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1afe736ceca981f8ee0e099110269b7466" kindref="member" tooltip="Fetches the name of the tag that triggered this call.">lasso_getTagNameW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_w_t<sp/>*<sp/>result);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a56c2350d6be72331cb030e4766b0f10c" kindref="member" tooltip="Fetches the number of parameters that were passed to the tag.">lasso_getTagParamCount</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4ef233c50567f37855603dc058efe406" kindref="member" tooltip="Fetches the indicated parameter that was sent to the tag.">lasso_getTagParam</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paramIndex,<sp/>auto_lasso_value_t<sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a051a424f7bf115ebfe54a94eb3f75793" kindref="member" tooltip="Fetches the indicated parameter that was sent to the tag.">lasso_getTagParamW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paramIndex,<sp/>auto_lasso_value_w_t<sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a7b52a9d502aaaac4690f623548474add" kindref="member" tooltip="Returns osErrNoErr if the param WAS defined.">lasso_tagParamIsDefined</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>paramName<sp/>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a33a91517e1aef9337043047a6d6ede41" kindref="member" tooltip="Returns osErrNoErr if the param WAS defined.">lasso_tagParamIsDefinedW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>paramName<sp/>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a0ea7474101663483eb8689fbb2775db2" kindref="member" tooltip="Retrieves a parameter that was passed to the LCAPI tag call.">lasso_findTagParam</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>paramName,<sp/>auto_lasso_value_t<sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a19ae188a20049bae5f0b7f8b90f3145e" kindref="member" tooltip="Retrieves a parameter that was passed to the LCAPI tag call.">lasso_findTagParamW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>paramName,<sp/>auto_lasso_value_w_t<sp/>*<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_setVariable(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>named,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">LCAPICALL<sp/>osError<sp/>lasso_setVariableW(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>named,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a7469a1b461a8ba4f421cdbbc8b3e77dc" kindref="member" tooltip="Adds a datasource result value.">lasso_addDataSourceResult</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a7e6c07237bd7030b745298ec415b1e9c" kindref="member" tooltip="Adds a datasource result value.">lasso_addDataSourceResultUTF8</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a7abe379ac89ca050208fd239126aba03" kindref="member" tooltip="Gets the currently specified database name and associated data.">lasso_getDataSourceName</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/>useHostDefault,<sp/>auto_lasso_value_t<sp/>*<sp/>usernamepassword<sp/>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a80bf83b848b9c49712fa8eab1ec3a897" kindref="member" tooltip="Gets the currently specified table name.">lasso_getTableName</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a0bd9fb902e7877416f8135b47f5296b9" kindref="member" tooltip="Gets the currently specified table encoding. This is the encoding as set in SiteAdmin for the current...">lasso_getTableEncoding</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a3efdf3a218d22cfd62baa14031194610" kindref="member" tooltip="Gets the currently specified schema name.">lasso_getSchemaName</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>schema);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ada7d2eb87606bfa88d857e2e6145c29f" kindref="member" tooltip="Returns the host that maintains the current database.">lasso_getDataHost</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>host,<sp/>auto_lasso_value_t<sp/>*<sp/>usernamepassword<sp/>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aab9c483175cac28c3c9b3a2837934667" kindref="member" tooltip="Returns the id of the host that maintains the current database.">lasso_getDataHostID</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>outId<sp/>);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a8051b31babf3ba46a4fb65e078c2dbc3" kindref="member" tooltip="Returns the host that maintains the current database.">lasso_getDataHost2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>host,<sp/>auto_lasso_value_t<sp/>*<sp/>defaultSchema,<sp/>auto_lasso_value_t<sp/>*<sp/>usernamepassword<sp/>);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a99709dd934a29da45102ab058a93cd8f" kindref="member" tooltip="Returns the &amp;quot;extra&amp;quot; information associated with the current host.">lasso_getDataHostExtra</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a7fe0bac5b95e5a69be15147faec1392f" kindref="member" tooltip="Indicates if the host is dynamic.">lasso_getDataHostIsDynamic</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/>wasDyn<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a3ecd97206a2c67b4ebf7990dc75de52c" kindref="member" tooltip="The number of rows that should be skipped in the found set.">lasso_getSkipRows</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>recs<sp/>);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a661b69571052a298d02c5d05bb22e8d8" kindref="member" tooltip="The maximum number of rows in the found set to return.">lasso_getMaxRows</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>recs<sp/>);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a52790510836877190e01fa8f8cf43d05" kindref="member" tooltip="Sets the currently specified record id (FileMaker specific).">lasso_setRowID</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a6c3bdde7662ee44e0c4c62e7b4cbded1" kindref="member" tooltip="Gets the currently specified record id (FileMaker specific).">lasso_getRowID</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aeaa993e385bfb4ec54fbf696c8aef5f9" kindref="member" tooltip="Gets the name and the value of the currently specified primary key column.">lasso_getPrimaryKeyColumn</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ac76ff794ffd7a12de1ab89ac2fca2bb2" kindref="member" tooltip="Gets the name and the value of the primary key column specified by index.">lasso_getPrimaryKeyColumn2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>auto_lasso_value_t<sp/>*<sp/>v,<sp/>LP_TypeDesc<sp/>*<sp/>desc<sp/>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ad890d7406eb49899fea1708c98f2c1d4" kindref="member" tooltip="Gets the name and the value of the primary key column specified by index, preserving the original typ...">lasso_getPrimaryKeyColumn3</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>auto_lasso_value_t<sp/>*<sp/>keyName,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a638ff1921a2cd9755cce94bb03b69f40" kindref="member" tooltip="Gets the number of key columns.">lasso_getPrimaryKeyColumnCount</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a68b8f69e6c147ac05156d42f7c01391b" kindref="member" tooltip="Gets the number of input columns for this database action.">lasso_getInputColumnCount</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a9b42baf0b3424367abdea249a7cf3828" kindref="member" tooltip="Gets the number of sort columns for this database action.">lasso_getSortColumnCount</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aa4fe5c97855c87839f51d2cf15f18622" kindref="member" tooltip="Gets an individual input column by index.">lasso_getInputColumn</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>auto_lasso_value_t<sp/>*<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ad44dbd64bcbfeb3b66592530f76ab0b5" kindref="member" tooltip="Gets an individual input column by index.">lasso_getInputColumn2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>auto_lasso_value_t<sp/>*<sp/>v,<sp/>LP_TypeDesc<sp/>*<sp/>desc<sp/>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af06526d556b2d80786c9824af3a51632" kindref="member" tooltip="Gets an individual input column by index, preserving the original type.">lasso_getInputColumn3</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>auto_lasso_value_t<sp/>*<sp/>colName,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref><sp/>*<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ae17f89eaae19e65ce3ace1083f2b7efd" kindref="member" tooltip="Gets an individual sort column by index.">lasso_getSortColumn</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>auto_lasso_value_t<sp/>*<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a2e5883c1efe43cbba869f0998b4cf672" kindref="member" tooltip="Gets an individual input column by name.">lasso_findInputColumn</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/>auto_lasso_value_t<sp/>*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aee234bbd9d0591472548dfa318a44d62" kindref="member" tooltip="Gets an individual input column by name.">lasso_findInputColumnW</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>name,<sp/>auto_lasso_value_t<sp/>*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aebef9186d861711f035b41b7596d7c25" kindref="member" tooltip="Gets the logical operator for this database action.">lasso_getLogicalOp</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>LP_TypeDesc<sp/>*<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a46d62a1e24a153f5631df951ae4b4e2a" kindref="member" tooltip="Gets the number of return columns for this action.">lasso_getReturnColumnCount</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a939d6f03305c64524f5fd2cb31745d2a" kindref="member" tooltip="Gets an individual return column by index.">lasso_getReturnColumn</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>auto_lasso_value_t<sp/>*<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a994e7ddc85ffce10fe4f4961d9fb71ba" kindref="member" tooltip="Adds information about a particular column.">lasso_addColumnInfo</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nullOK,<sp/>LP_TypeDesc<sp/>type,<sp/>LP_TypeDesc<sp/>protection<sp/>);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a2161e438ccba3bba2dcdeb9c866b1d9e" kindref="member" tooltip="Adds information, including valuelists, about a particular column.">lasso_addColumnInfo2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nullOK,<sp/>LP_TypeDesc<sp/>type,<sp/>LP_TypeDesc<sp/>protection,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>valueList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countValueList<sp/>);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a4e68a0ac40e0c012311cc311425b170c" kindref="member" tooltip="Add the column data for the next result row.">lasso_addResultRow</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>columns,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>dataSizes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numColumns<sp/>);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a05f9b774a6e8c2decba4b0b8c0c2f261" kindref="member" tooltip="Add the column data for the next result row. Column data is represented as Lasso types.">lasso_addResultRow2</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__type__t__" kindref="compound" tooltip="Represents a type within Lasso.">lasso_type_t</ref>*<sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a0a4145d3d6066876a2fc0826d2eec489" kindref="member" tooltip="Adds a new result set to the datasource results.">lasso_addResultSet</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token<sp/>);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ad8cddb8a1d6491f3494de591359bed37" kindref="member" tooltip="Sets the number of rows found in the query.">lasso_setNumRowsFound</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1afba37ea8f4d925a9af787a333e308945" kindref="member" tooltip="Returns the name the current datasource module was registered with.">lasso_getDataSourceModuleName</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/>auto_lasso_value_t<sp/>*<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1af2e5c4dd582ccdb2a88bce81a477e11f" kindref="member" tooltip="Allows a datasource to set a prepared statement pointer.">lasso_setDSPreparedPtr</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a9b01bca301dc4a6ae6a52dfe9f2e2adb" kindref="member" tooltip="Allows a datasource to get a previously set prepared statement pointer.">lasso_getDSPreparedPtr</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a35f82b2bfc1522a2ac14784c3e0d78f6" kindref="member" tooltip="Called to access the current datasource connection.">lasso_getDSConnection</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__dsconnection__t__" kindref="compound" tooltip="Represents a datasource module connection.">lasso_dsconnection_t</ref><sp/>*<sp/>conn);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a0385f2a8695e079e0c1a643beaf24157" kindref="member" tooltip="Called to set the current connection for the datasource.">lasso_setDSConnection</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/><ref refid="structlasso__dsconnection__t__" kindref="compound" tooltip="Represents a datasource module connection.">lasso_dsconnection_t</ref><sp/>conn);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a2ed752b3f0974cd334cc9943dcb72d8a" kindref="member" tooltip="Provides access to the &amp;quot;user data&amp;quot; that was set when the datasorce was registered.">lasso_getDSUserData</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>outPtr);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1aa342a3807011a309524e29274e4b159b" kindref="member" tooltip="Called to set the statement for the current action.">lasso_setActionStatement</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>stat);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1ad6a477b23257a7eece23a72fe82cf2cf" kindref="member" tooltip="Called to set the statement for the current action.">lasso_setActionStatementW</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UChar<sp/>*<sp/>stat);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a941b582ae206642c6686b2fd3d73e685" kindref="member" tooltip="Used to check for the -statementonly inline param.">lasso_getIsStatementOnly</ref>(<ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/>out);</highlight></codeline>
<codeline lineno="2095"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMaxPathLen<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>osPathname[1024];</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a9e5eaeed9d05ea99081bba0d6096ff22" kindref="member" tooltip="This function is a no-op in Lasso 9.">lasso_getPlatformSpecificPath</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inInternalPath,<sp/>osPathname<sp/>outPlatformPath<sp/>);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a68b64e3738e1a45ab19bf33acd01ec98" kindref="member" tooltip="This function is a no-op in Lasso 9.">lasso_getInternalPath</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inPlatformPath,<sp/>osPathname<sp/>outInternalPath<sp/>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a76e162ed7de5fc81ec565d2c80b98f7a" kindref="member" tooltip="This function is a no-op in Lasso 9.">lasso_fullyQualifyPath</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>inRelativePath,<sp/>osPathname<sp/>outFullyQualified<sp/>);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a2411d74791a80aa86ea957c024ba1f13" kindref="member" tooltip="This function is a no-op in Lasso 9.">lasso_resolvePath</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>inPath,<sp/>osPathname<sp/>outFullPath<sp/>);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1ab3decd3c528709dfc0fe07badb47167f" kindref="member" tooltip="This function is a no-op in Lasso 9.">lasso_resolveIncludePath</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>inPath,<sp/>osPathname<sp/>outFullPath<sp/>);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1afb023113e7867cbf849c626f426e1240" kindref="member" tooltip="This function is a no-op in Lasso 9.">lasso_internalToFullPlatformPath</ref>(<sp/><ref refid="structlasso__request__t__" kindref="compound" tooltip="Special value passed to modules that identify the request.">lasso_request_t</ref><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>relativeOrFullInternalPath,<sp/>osPathname<sp/>fullPlatformPath<sp/>);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal">LCAPICALL<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a7784ee017942687a7d96a101faf09ef8" kindref="member" tooltip="Returns true if the path begins with a forward slash.">lasso_isFullInternalPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="2176" refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" kindref="member" tooltip="The various log levels.">log_level_t</ref></highlight></codeline>
<codeline lineno="2177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2178" refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1da1fc247cb72494d85ca8d4826117001fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1da1fc247cb72494d85ca8d4826117001fc" kindref="member">LOG_LEVEL_ALWAYS</ref>,<sp/></highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}<sp/><ref refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" kindref="member" tooltip="The various log levels.">log_level_t</ref>;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal">LCAPICALL<sp/>osError<sp/><ref refid="_lasso_c_a_p_i_8h_1a072ecfd00c323e925c8b65378f5eaafc" kindref="member" tooltip="Log a message to stdout.">lasso_log</ref>(<sp/><ref refid="_lasso_c_a_p_i_8h_1a98121d38a8cf3daf5246a349f912ca1d" kindref="member" tooltip="The various log levels.">log_level_t</ref><sp/>msgLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/kjessup/development/lasso_svn/lasso9_llvm/trunk/capi/sdk/LassoCAPI.h"/>
  </compounddef>
</doxygen>
